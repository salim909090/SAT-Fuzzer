[!] False input file /Users/salimalwahaibi/Desktop/imperial/sem 2/software relibelity/software-reliability-/inputs/functional_inputs/aim-50-2_0-no-1.cnf the error found is:
std output:
UNSAT

std error
sat.c:334:13: runtime error: load of misaligned address 0x602000000111 for type 'int', which requires 4 byte alignment
0x602000000111: note: pointer points here
 00 00 00  07 00 00 00 f5 ff ff ff  1b 00 00 00 00 00 00 00  02 11 00 00 0c 00 00 00  01 00 00 28 00
              ^ 
SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior sat.c:334:13 in 
sat.c:337:13: runtime error: load of misaligned address 0x602000000111 for type 'int', which requires 4 byte alignment
0x602000000111: note: pointer points here
 00 00 00  07 00 00 00 f5 ff ff ff  1b 00 00 00 00 00 00 00  02 11 00 00 0c 00 00 00  01 00 00 28 00
              ^ 
SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior sat.c:337:13 in 
=================================================================
==98427==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020000075f9 at pc 0x00010d19ddb2 bp 0x7ffee2a6f050 sp 0x7ffee2a6f048
READ of size 4 at 0x6020000075f9 thread T0
    #0 0x10d19ddb1 in binary_search sat.c:334
    #1 0x10d197fb8 in remove_lit sat.c:315
    #2 0x10d197a04 in assign sat.c:159
    #3 0x10d19603b in DPLL sat.c:239
    #4 0x10d196b04 in DPLL sat.c:261
    #5 0x10d196806 in DPLL sat.c:260
    #6 0x10d196806 in DPLL sat.c:260
    #7 0x10d196806 in DPLL sat.c:260
    #8 0x10d196806 in DPLL sat.c:260
    #9 0x10d196806 in DPLL sat.c:260
    #10 0x10d196806 in DPLL sat.c:260
    #11 0x10d196806 in DPLL sat.c:260
    #12 0x10d196806 in DPLL sat.c:260
    #13 0x10d196806 in DPLL sat.c:260
    #14 0x10d196806 in DPLL sat.c:260
    #15 0x10d196806 in DPLL sat.c:260
    #16 0x10d19550a in main sat.c:125
    #17 0x7fff2053df3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)
0x6020000075f9 is located 1 bytes to the right of 8-byte region [0x6020000075f0,0x6020000075f8)
allocated by thread T0 here:
    #0 0x10d1f7400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x10d19c75b in copy sat.c:287
    #2 0x10d1966c7 in DPLL sat.c:259
    #3 0x10d196806 in DPLL sat.c:260
    #4 0x10d196806 in DPLL sat.c:260
    #5 0x10d196806 in DPLL sat.c:260
    #6 0x10d196806 in DPLL sat.c:260
    #7 0x10d196806 in DPLL sat.c:260
    #8 0x10d196806 in DPLL sat.c:260
    #9 0x10d196806 in DPLL sat.c:260
    #10 0x10d196806 in DPLL sat.c:260
    #11 0x10d196806 in DPLL sat.c:260
    #12 0x10d196806 in DPLL sat.c:260
    #13 0x10d196806 in DPLL sat.c:260
    #14 0x10d19550a in main sat.c:125
    #15 0x7fff2053df3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)
SUMMARY: AddressSanitizer: heap-buffer-overflow sat.c:334 in binary_search
Shadow bytes around the buggy address:
  0x1c0400000e60: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 fa
  0x1c0400000e70: fa fa 00 04 fa fa 00 fa fa fa 00 04 fa fa 00 04
  0x1c0400000e80: fa fa 00 04 fa fa 00 04 fa fa 00 fa fa fa 00 04
  0x1c0400000e90: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400000ea0: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
=>0x1c0400000eb0: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00[fa]
  0x1c0400000ec0: fa fa 00 fa fa fa 00 04 fa fa 00 04 fa fa 00 fa
  0x1c0400000ed0: fa fa 00 fa fa fa 00 fa fa fa 00 fa fa fa 00 04
  0x1c0400000ee0: fa fa 00 fa fa fa 00 04 fa fa 00 fa fa fa 00 04
  0x1c0400000ef0: fa fa 00 04 fa fa 00 fa fa fa 00 04 fa fa 00 04
  0x1c0400000f00: fa fa 00 04 fa fa 00 fa fa fa 00 04 fa fa 00 04
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
=================================================================
==98427==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020000075f9 at pc 0x00010d19deee bp 0x7ffee2a6f050 sp 0x7ffee2a6f048
READ of size 4 at 0x6020000075f9 thread T0
    #0 0x10d19deed in binary_search sat.c:337
    #1 0x10d197fb8 in remove_lit sat.c:315
    #2 0x10d197a04 in assign sat.c:159
    #3 0x10d19603b in DPLL sat.c:239
    #4 0x10d196b04 in DPLL sat.c:261
    #5 0x10d196806 in DPLL sat.c:260
    #6 0x10d196806 in DPLL sat.c:260
    #7 0x10d196806 in DPLL sat.c:260
    #8 0x10d196806 in DPLL sat.c:260
    #9 0x10d196806 in DPLL sat.c:260
    #10 0x10d196806 in DPLL sat.c:260
    #11 0x10d196806 in DPLL sat.c:260
    #12 0x10d196806 in DPLL sat.c:260
    #13 0x10d196806 in DPLL sat.c:260
    #14 0x10d196806 in DPLL sat.c:260
    #15 0x10d196806 in DPLL sat.c:260
    #16 0x10d19550a in main sat.c:125
    #17 0x7fff2053df3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)
0x6020000075f9 is located 1 bytes to the right of 8-byte region [0x6020000075f0,0x6020000075f8)
allocated by thread T0 here:
    #0 0x10d1f7400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x10d19c75b in copy sat.c:287
    #2 0x10d1966c7 in DPLL sat.c:259
    #3 0x10d196806 in DPLL sat.c:260
    #4 0x10d196806 in DPLL sat.c:260
    #5 0x10d196806 in DPLL sat.c:260
    #6 0x10d196806 in DPLL sat.c:260
    #7 0x10d196806 in DPLL sat.c:260
    #8 0x10d196806 in DPLL sat.c:260
    #9 0x10d196806 in DPLL sat.c:260
    #10 0x10d196806 in DPLL sat.c:260
    #11 0x10d196806 in DPLL sat.c:260
    #12 0x10d196806 in DPLL sat.c:260
    #13 0x10d196806 in DPLL sat.c:260
    #14 0x10d19550a in main sat.c:125
    #15 0x7fff2053df3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)
SUMMARY: AddressSanitizer: heap-buffer-overflow sat.c:337 in binary_search
Shadow bytes around the buggy address:
  0x1c0400000e60: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 fa
  0x1c0400000e70: fa fa 00 04 fa fa 00 fa fa fa 00 04 fa fa 00 04
  0x1c0400000e80: fa fa 00 04 fa fa 00 04 fa fa 00 fa fa fa 00 04
  0x1c0400000e90: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400000ea0: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
=>0x1c0400000eb0: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00[fa]
  0x1c0400000ec0: fa fa 00 fa fa fa 00 04 fa fa 00 04 fa fa 00 fa
  0x1c0400000ed0: fa fa 00 fa fa fa 00 fa fa fa 00 fa fa fa 00 04
  0x1c0400000ee0: fa fa 00 fa fa fa 00 04 fa fa 00 fa fa fa 00 04
  0x1c0400000ef0: fa fa 00 04 fa fa 00 fa fa fa 00 04 fa fa 00 04
  0x1c0400000f00: fa fa 00 04 fa fa 00 fa fa fa 00 04 fa fa 00 04
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
=================================================================
==98427==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000007618 at pc 0x00010d1f5533 bp 0x7ffee2a6f990 sp 0x7ffee2a6f158
WRITE of size 12 at 0x602000007618 thread T0
    #0 0x10d1f5532 in __asan_memcpy+0x262 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x42532)
    #1 0x10d19cf59 in copy sat.c:292
    #2 0x10d196953 in DPLL sat.c:261
    #3 0x10d196806 in DPLL sat.c:260
    #4 0x10d196806 in DPLL sat.c:260
    #5 0x10d196806 in DPLL sat.c:260
    #6 0x10d196806 in DPLL sat.c:260
    #7 0x10d196806 in DPLL sat.c:260
    #8 0x10d196806 in DPLL sat.c:260
    #9 0x10d196806 in DPLL sat.c:260
    #10 0x10d196806 in DPLL sat.c:260
    #11 0x10d196806 in DPLL sat.c:260
    #12 0x10d196806 in DPLL sat.c:260
    #13 0x10d19550a in main sat.c:125
    #14 0x7fff2053df3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)
0x602000007618 is located 0 bytes to the right of 8-byte region [0x602000007610,0x602000007618)
allocated by thread T0 here:
    #0 0x10d1f7400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x10d19c75b in copy sat.c:287
    #2 0x10d1966c7 in DPLL sat.c:259
    #3 0x10d196806 in DPLL sat.c:260
    #4 0x10d196806 in DPLL sat.c:260
    #5 0x10d196806 in DPLL sat.c:260
    #6 0x10d196806 in DPLL sat.c:260
    #7 0x10d196806 in DPLL sat.c:260
    #8 0x10d196806 in DPLL sat.c:260
    #9 0x10d196806 in DPLL sat.c:260
    #10 0x10d196806 in DPLL sat.c:260
    #11 0x10d196806 in DPLL sat.c:260
    #12 0x10d196806 in DPLL sat.c:260
    #13 0x10d196806 in DPLL sat.c:260
    #14 0x10d19550a in main sat.c:125
    #15 0x7fff2053df3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)
SUMMARY: AddressSanitizer: heap-buffer-overflow (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x42532) in __asan_memcpy+0x262
Shadow bytes around the buggy address:
  0x1c0400000e70: fa fa 00 04 fa fa 00 fa fa fa 00 04 fa fa 00 04
  0x1c0400000e80: fa fa 00 04 fa fa 00 04 fa fa 00 fa fa fa 00 04
  0x1c0400000e90: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400000ea0: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400000eb0: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 fa
=>0x1c0400000ec0: fa fa 00[fa]fa fa 00 04 fa fa 00 04 fa fa 00 fa
  0x1c0400000ed0: fa fa 00 fa fa fa 00 fa fa fa 00 fa fa fa 00 04
  0x1c0400000ee0: fa fa 00 fa fa fa 00 04 fa fa 00 fa fa fa 00 04
  0x1c0400000ef0: fa fa 00 04 fa fa 00 fa fa fa 00 04 fa fa 00 04
  0x1c0400000f00: fa fa 00 04 fa fa 00 fa fa fa 00 04 fa fa 00 04
  0x1c0400000f10: fa fa 00 fa fa fa 00 04 fa fa 00 04 fa fa 00 04
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
=================================================================
==98427==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000007d38 at pc 0x00010d1f5480 bp 0x7ffee2a6f530 sp 0x7ffee2a6ecf8
READ of size 12 at 0x602000007d38 thread T0
    #0 0x10d1f547f in __asan_memcpy+0x1af (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x4247f)
    #1 0x10d19cf59 in copy sat.c:292
    #2 0x10d1966c7 in DPLL sat.c:259
    #3 0x10d196b04 in DPLL sat.c:261
    #4 0x10d196806 in DPLL sat.c:260
    #5 0x10d196806 in DPLL sat.c:260
    #6 0x10d196806 in DPLL sat.c:260
    #7 0x10d196806 in DPLL sat.c:260
    #8 0x10d196806 in DPLL sat.c:260
    #9 0x10d196806 in DPLL sat.c:260
    #10 0x10d196806 in DPLL sat.c:260
    #11 0x10d196806 in DPLL sat.c:260
    #12 0x10d196806 in DPLL sat.c:260
    #13 0x10d196806 in DPLL sat.c:260
    #14 0x10d19550a in main sat.c:125
    #15 0x7fff2053df3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)
0x602000007d38 is located 0 bytes to the right of 8-byte region [0x602000007d30,0x602000007d38)
allocated by thread T0 here:
    #0 0x10d1f7400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x10d19c75b in copy sat.c:287
    #2 0x10d1966c7 in DPLL sat.c:259
    #3 0x10d196806 in DPLL sat.c:260
    #4 0x10d196806 in DPLL sat.c:260
    #5 0x10d196806 in DPLL sat.c:260
    #6 0x10d196806 in DPLL sat.c:260
    #7 0x10d196806 in DPLL sat.c:260
    #8 0x10d196806 in DPLL sat.c:260
    #9 0x10d196806 in DPLL sat.c:260
    #10 0x10d196806 in DPLL sat.c:260
    #11 0x10d196806 in DPLL sat.c:260
    #12 0x10d196806 in DPLL sat.c:260
    #13 0x10d196806 in DPLL sat.c:260
    #14 0x10d19550a in main sat.c:125
    #15 0x7fff2053df3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)
SUMMARY: AddressSanitizer: heap-buffer-overflow (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x4247f) in __asan_memcpy+0x1af
Shadow bytes around the buggy address:
  0x1c0400000f50: fa fa 00 04 fa fa 00 fa fa fa 00 04 fa fa 00 04
  0x1c0400000f60: fa fa 00 fa fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400000f70: fa fa 00 04 fa fa 00 fa fa fa 00 04 fa fa 00 fa
  0x1c0400000f80: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400000f90: fa fa 00 fa fa fa 00 04 fa fa 00 04 fa fa 00 04
=>0x1c0400000fa0: fa fa 00 04 fa fa 00[fa]fa fa 00 04 fa fa 00 04
  0x1c0400000fb0: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400000fc0: fa fa 00 04 fa fa 00 00 fa fa fd fd fa fa fd fa
  0x1c0400000fd0: fa fa fd fa fa fa 00 fa fa fa 00 04 fa fa 00 04
  0x1c0400000fe0: fa fa 00 fa fa fa 00 fa fa fa 00 fa fa fa 00 fa
  0x1c0400000ff0: fa fa 00 04 fa fa 00 fa fa fa 00 04 fa fa 00 fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
=================================================================
==98427==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020000128d8 at pc 0x00010d198221 bp 0x7ffee2a6f550 sp 0x7ffee2a6f548
READ of size 4 at 0x6020000128d8 thread T0
    #0 0x10d198220 in remove_lit sat.c:319
    #1 0x10d197a04 in assign sat.c:159
    #2 0x10d19603b in DPLL sat.c:239
    #3 0x10d196b04 in DPLL sat.c:261
    #4 0x10d196806 in DPLL sat.c:260
    #5 0x10d196806 in DPLL sat.c:260
    #6 0x10d196b04 in DPLL sat.c:261
    #7 0x10d196806 in DPLL sat.c:260
    #8 0x10d196806 in DPLL sat.c:260
    #9 0x10d196806 in DPLL sat.c:260
    #10 0x10d196806 in DPLL sat.c:260
    #11 0x10d196806 in DPLL sat.c:260
    #12 0x10d196806 in DPLL sat.c:260
    #13 0x10d196806 in DPLL sat.c:260
    #14 0x10d19550a in main sat.c:125
    #15 0x7fff2053df3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)
0x6020000128d8 is located 0 bytes to the right of 8-byte region [0x6020000128d0,0x6020000128d8)
allocated by thread T0 here:
    #0 0x10d1f7400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x10d19c75b in copy sat.c:287
    #2 0x10d1966c7 in DPLL sat.c:259
    #3 0x10d196806 in DPLL sat.c:260
    #4 0x10d196806 in DPLL sat.c:260
    #5 0x10d196806 in DPLL sat.c:260
    #6 0x10d196806 in DPLL sat.c:260
    #7 0x10d196b04 in DPLL sat.c:261
    #8 0x10d196806 in DPLL sat.c:260
    #9 0x10d196806 in DPLL sat.c:260
    #10 0x10d196806 in DPLL sat.c:260
    #11 0x10d196806 in DPLL sat.c:260
    #12 0x10d196806 in DPLL sat.c:260
    #13 0x10d196806 in DPLL sat.c:260
    #14 0x10d196806 in DPLL sat.c:260
    #15 0x10d19550a in main sat.c:125
    #16 0x7fff2053df3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)
SUMMARY: AddressSanitizer: heap-buffer-overflow sat.c:319 in remove_lit
Shadow bytes around the buggy address:
  0x1c04000024c0: fa fa 00 04 fa fa 00 fa fa fa 00 04 fa fa 00 fa
  0x1c04000024d0: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c04000024e0: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c04000024f0: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400002500: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
=>0x1c0400002510: fa fa 00 04 fa fa 00 04 fa fa 00[fa]fa fa 00 04
  0x1c0400002520: fa fa 00 04 fa fa 00 fa fa fa 00 fa fa fa 00 fa
  0x1c0400002530: fa fa 00 fa fa fa 00 04 fa fa 00 fa fa fa 00 04
  0x1c0400002540: fa fa 00 fa fa fa 00 04 fa fa 00 04 fa fa 00 fa
  0x1c0400002550: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 fa
  0x1c0400002560: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc