[!] False input file /Users/salimalwahaibi/Desktop/imperial/sem 2/software relibelity/software-reliability-/inputs/functional_inputs/aim-50-1_6-yes1-1.cnf the error found is:
std output:
SAT
-1 2 3 -4 -5 -6 7 8 9 -10 -11 -12 -13 14 -15 -16 17 18 19 20 21 22 23 24 -25 26 27 28 -29 30 31 -32 -33 -34 35 36 -37 38 39 40 41 42 43 -44 -45 46 -47 48 -49 -50

std error
sat.c:334:13: runtime error: load of misaligned address 0x602000000151 for type 'int', which requires 4 byte alignment
0x602000000151: note: pointer points here
 00 00 00  05 00 00 00 f6 ff ff ff  d7 ff ff ff 00 00 00 00  02 11 00 00 0c 00 00 00  01 00 80 12 00
              ^ 
SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior sat.c:334:13 in 
sat.c:337:13: runtime error: load of misaligned address 0x602000000151 for type 'int', which requires 4 byte alignment
0x602000000151: note: pointer points here
 00 00 00  05 00 00 00 f6 ff ff ff  d7 ff ff ff 00 00 00 00  02 11 00 00 0c 00 00 00  01 00 80 12 00
              ^ 
SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior sat.c:337:13 in 
=================================================================
==98096==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000003039 at pc 0x0001027ffdb2 bp 0x7ffeed40eef0 sp 0x7ffeed40eee8
READ of size 4 at 0x602000003039 thread T0
    #0 0x1027ffdb1 in binary_search sat.c:334
    #1 0x1027f9fb8 in remove_lit sat.c:315
    #2 0x1027f9a04 in assign sat.c:159
    #3 0x1027f803b in DPLL sat.c:239
    #4 0x1027f8b04 in DPLL sat.c:261
    #5 0x1027f8806 in DPLL sat.c:260
    #6 0x1027f8806 in DPLL sat.c:260
    #7 0x1027f8806 in DPLL sat.c:260
    #8 0x1027f8806 in DPLL sat.c:260
    #9 0x1027f750a in main sat.c:125
    #10 0x7fff2053df3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)
0x602000003039 is located 1 bytes to the right of 8-byte region [0x602000003030,0x602000003038)
allocated by thread T0 here:
    #0 0x102857400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x1027fe75b in copy sat.c:287
    #2 0x1027f86c7 in DPLL sat.c:259
    #3 0x1027f8806 in DPLL sat.c:260
    #4 0x1027f8806 in DPLL sat.c:260
    #5 0x1027f8806 in DPLL sat.c:260
    #6 0x1027f8806 in DPLL sat.c:260
    #7 0x1027f750a in main sat.c:125
    #8 0x7fff2053df3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)
SUMMARY: AddressSanitizer: heap-buffer-overflow sat.c:334 in binary_search
Shadow bytes around the buggy address:
  0x1c04000005b0: fa fa 00 04 fa fa 00 00 fa fa 00 00 fa fa 00 00
  0x1c04000005c0: fa fa 00 00 fa fa 00 00 fa fa 00 00 fa fa 00 00
  0x1c04000005d0: fa fa 00 00 fa fa 00 00 fa fa 00 00 fa fa 00 00
  0x1c04000005e0: fa fa 00 00 fa fa 00 00 fa fa 00 00 fa fa 00 00
  0x1c04000005f0: fa fa 00 00 fa fa 00 00 fa fa 00 00 fa fa 00 00
=>0x1c0400000600: fa fa 00 00 fa fa 00[fa]fa fa 00 fa fa fa 00 fa
  0x1c0400000610: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400000620: fa fa 00 04 fa fa 00 04 fa fa 00 fa fa fa 00 fa
  0x1c0400000630: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400000640: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400000650: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
=================================================================
==98096==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000003039 at pc 0x0001027ffeee bp 0x7ffeed40eef0 sp 0x7ffeed40eee8
READ of size 4 at 0x602000003039 thread T0
    #0 0x1027ffeed in binary_search sat.c:337
    #1 0x1027f9fb8 in remove_lit sat.c:315
    #2 0x1027f9a04 in assign sat.c:159
    #3 0x1027f803b in DPLL sat.c:239
    #4 0x1027f8b04 in DPLL sat.c:261
    #5 0x1027f8806 in DPLL sat.c:260
    #6 0x1027f8806 in DPLL sat.c:260
    #7 0x1027f8806 in DPLL sat.c:260
    #8 0x1027f8806 in DPLL sat.c:260
    #9 0x1027f750a in main sat.c:125
    #10 0x7fff2053df3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)
0x602000003039 is located 1 bytes to the right of 8-byte region [0x602000003030,0x602000003038)
allocated by thread T0 here:
    #0 0x102857400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x1027fe75b in copy sat.c:287
    #2 0x1027f86c7 in DPLL sat.c:259
    #3 0x1027f8806 in DPLL sat.c:260
    #4 0x1027f8806 in DPLL sat.c:260
    #5 0x1027f8806 in DPLL sat.c:260
    #6 0x1027f8806 in DPLL sat.c:260
    #7 0x1027f750a in main sat.c:125
    #8 0x7fff2053df3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)
SUMMARY: AddressSanitizer: heap-buffer-overflow sat.c:337 in binary_search
Shadow bytes around the buggy address:
  0x1c04000005b0: fa fa 00 04 fa fa 00 00 fa fa 00 00 fa fa 00 00
  0x1c04000005c0: fa fa 00 00 fa fa 00 00 fa fa 00 00 fa fa 00 00
  0x1c04000005d0: fa fa 00 00 fa fa 00 00 fa fa 00 00 fa fa 00 00
  0x1c04000005e0: fa fa 00 00 fa fa 00 00 fa fa 00 00 fa fa 00 00
  0x1c04000005f0: fa fa 00 00 fa fa 00 00 fa fa 00 00 fa fa 00 00
=>0x1c0400000600: fa fa 00 00 fa fa 00[fa]fa fa 00 fa fa fa 00 fa
  0x1c0400000610: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400000620: fa fa 00 04 fa fa 00 04 fa fa 00 fa fa fa 00 fa
  0x1c0400000630: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400000640: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400000650: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
=================================================================
==98096==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000003038 at pc 0x000102855533 bp 0x7ffeed40f830 sp 0x7ffeed40eff8
WRITE of size 12 at 0x602000003038 thread T0
    #0 0x102855532 in __asan_memcpy+0x262 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x42532)
    #1 0x1027fef59 in copy sat.c:292
    #2 0x1027f8953 in DPLL sat.c:261
    #3 0x1027f8806 in DPLL sat.c:260
    #4 0x1027f8806 in DPLL sat.c:260
    #5 0x1027f8806 in DPLL sat.c:260
    #6 0x1027f750a in main sat.c:125
    #7 0x7fff2053df3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)
0x602000003038 is located 0 bytes to the right of 8-byte region [0x602000003030,0x602000003038)
allocated by thread T0 here:
    #0 0x102857400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x1027fe75b in copy sat.c:287
    #2 0x1027f86c7 in DPLL sat.c:259
    #3 0x1027f8806 in DPLL sat.c:260
    #4 0x1027f8806 in DPLL sat.c:260
    #5 0x1027f8806 in DPLL sat.c:260
    #6 0x1027f8806 in DPLL sat.c:260
    #7 0x1027f750a in main sat.c:125
    #8 0x7fff2053df3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)
SUMMARY: AddressSanitizer: heap-buffer-overflow (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x42532) in __asan_memcpy+0x262
Shadow bytes around the buggy address:
  0x1c04000005b0: fa fa 00 04 fa fa 00 00 fa fa 00 00 fa fa 00 00
  0x1c04000005c0: fa fa 00 00 fa fa 00 00 fa fa 00 00 fa fa 00 00
  0x1c04000005d0: fa fa 00 00 fa fa 00 00 fa fa 00 00 fa fa 00 00
  0x1c04000005e0: fa fa 00 00 fa fa 00 00 fa fa 00 00 fa fa 00 00
  0x1c04000005f0: fa fa 00 00 fa fa 00 00 fa fa 00 00 fa fa 00 00
=>0x1c0400000600: fa fa 00 00 fa fa 00[fa]fa fa 00 fa fa fa 00 fa
  0x1c0400000610: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400000620: fa fa 00 04 fa fa 00 04 fa fa 00 fa fa fa 00 fa
  0x1c0400000630: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400000640: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400000650: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
=================================================================
==98096==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000003038 at pc 0x0001027fa221 bp 0x7ffeed40f3f0 sp 0x7ffeed40f3e8
READ of size 4 at 0x602000003038 thread T0
    #0 0x1027fa220 in remove_lit sat.c:319
    #1 0x1027f9a04 in assign sat.c:159
    #2 0x1027f803b in DPLL sat.c:239
    #3 0x1027f8b04 in DPLL sat.c:261
    #4 0x1027f8806 in DPLL sat.c:260
    #5 0x1027f8806 in DPLL sat.c:260
    #6 0x1027f8806 in DPLL sat.c:260
    #7 0x1027f750a in main sat.c:125
    #8 0x7fff2053df3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)
0x602000003038 is located 0 bytes to the right of 8-byte region [0x602000003030,0x602000003038)
allocated by thread T0 here:
    #0 0x102857400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x1027fe75b in copy sat.c:287
    #2 0x1027f86c7 in DPLL sat.c:259
    #3 0x1027f8806 in DPLL sat.c:260
    #4 0x1027f8806 in DPLL sat.c:260
    #5 0x1027f8806 in DPLL sat.c:260
    #6 0x1027f8806 in DPLL sat.c:260
    #7 0x1027f750a in main sat.c:125
    #8 0x7fff2053df3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)
SUMMARY: AddressSanitizer: heap-buffer-overflow sat.c:319 in remove_lit
Shadow bytes around the buggy address:
  0x1c04000005b0: fa fa 00 04 fa fa 00 00 fa fa 00 00 fa fa 00 00
  0x1c04000005c0: fa fa 00 00 fa fa 00 00 fa fa 00 00 fa fa 00 00
  0x1c04000005d0: fa fa 00 00 fa fa 00 00 fa fa 00 00 fa fa 00 00
  0x1c04000005e0: fa fa 00 00 fa fa 00 00 fa fa 00 00 fa fa 00 00
  0x1c04000005f0: fa fa 00 00 fa fa 00 00 fa fa 00 00 fa fa 00 00
=>0x1c0400000600: fa fa 00 00 fa fa 00[fa]fa fa 00 fa fa fa 00 fa
  0x1c0400000610: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400000620: fa fa 00 04 fa fa 00 04 fa fa 00 fa fa fa 00 fa
  0x1c0400000630: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400000640: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400000650: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
=================================================================
==98096==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000003a18 at pc 0x000102855480 bp 0x7ffeed40f3d0 sp 0x7ffeed40eb98
READ of size 12 at 0x602000003a18 thread T0
    #0 0x10285547f in __asan_memcpy+0x1af (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x4247f)
    #1 0x1027fef59 in copy sat.c:292
    #2 0x1027f86c7 in DPLL sat.c:259
    #3 0x1027f8b04 in DPLL sat.c:261
    #4 0x1027f8806 in DPLL sat.c:260
    #5 0x1027f8806 in DPLL sat.c:260
    #6 0x1027f8806 in DPLL sat.c:260
    #7 0x1027f750a in main sat.c:125
    #8 0x7fff2053df3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)
0x602000003a18 is located 0 bytes to the right of 8-byte region [0x602000003a10,0x602000003a18)
allocated by thread T0 here:
    #0 0x102857400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x1027fe75b in copy sat.c:287
    #2 0x1027f86c7 in DPLL sat.c:259
    #3 0x1027f8b04 in DPLL sat.c:261
    #4 0x1027f8806 in DPLL sat.c:260
    #5 0x1027f8806 in DPLL sat.c:260
    #6 0x1027f8806 in DPLL sat.c:260
    #7 0x1027f8806 in DPLL sat.c:260
    #8 0x1027f750a in main sat.c:125
    #9 0x7fff2053df3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)
SUMMARY: AddressSanitizer: heap-buffer-overflow (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x4247f) in __asan_memcpy+0x1af
Shadow bytes around the buggy address:
  0x1c04000006f0: fa fa 00 00 fa fa 00 00 fa fa 00 00 fa fa 00 00
  0x1c0400000700: fa fa 00 00 fa fa 00 00 fa fa 00 00 fa fa 00 00
  0x1c0400000710: fa fa 00 00 fa fa 00 00 fa fa 00 00 fa fa 00 00
  0x1c0400000720: fa fa 00 00 fa fa 00 00 fa fa 00 00 fa fa 00 00
  0x1c0400000730: fa fa 00 00 fa fa fd fd fa fa fd fa fa fa fd fa
=>0x1c0400000740: fa fa 00[fa]fa fa 00 fa fa fa 00 fa fa fa 00 fa
  0x1c0400000750: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400000760: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400000770: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400000780: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400000790: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc