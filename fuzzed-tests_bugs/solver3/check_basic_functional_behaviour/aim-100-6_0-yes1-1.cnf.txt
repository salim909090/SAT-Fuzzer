[!] False input file /Users/salimalwahaibi/Desktop/imperial/sem 2/software relibelity/software-reliability-/inputs/functional_inputs/aim-100-6_0-yes1-1.cnf the error found is:
std output:
SAT
-1 -2 3 -4 -5 6 -7 8 9 -10 11 12 -13 14 15 16 -17 -18 19 -20 -21 22 -23 24 -25 -26 27 28 29 -30 -31 -32 -33 -34 -35 -36 37 -38 -39 40 -41 -42 43 -44 45 -46 -47 -48 -49 -50 -51 52 -53 54 -55 56 57 -58 59 -60 -61 62 -63 64 -65 -66 -67 68 -69 -70 71 72 73 -74 75 76 77 78 79 -80 -81 -82 -83 84 85 -86 87 88 89 90 91 92 93 -94 -95 96 -97 98 -99 -100

std error
sat.c:334:13: runtime error: load of misaligned address 0x602000004c31 for type 'int', which requires 4 byte alignment
0x602000004c31: note: pointer points here
 00 00 00  01 00 00 00 22 00 00 00  c9 ff ff ff 00 00 00 00  02 11 00 00 0c 00 00 00  01 00 80 35 00
              ^ 
SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior sat.c:334:13 in 
sat.c:337:13: runtime error: load of misaligned address 0x602000004c31 for type 'int', which requires 4 byte alignment
0x602000004c31: note: pointer points here
 00 00 00  01 00 00 00 22 00 00 00  c9 ff ff ff 00 00 00 00  02 11 00 00 0c 00 00 00  01 00 80 35 00
              ^ 
SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior sat.c:337:13 in 
=================================================================
==98344==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60200000ed99 at pc 0x0001052addb2 bp 0x7ffeea961350 sp 0x7ffeea961348
READ of size 4 at 0x60200000ed99 thread T0
    #0 0x1052addb1 in binary_search sat.c:334
    #1 0x1052a7fb8 in remove_lit sat.c:315
    #2 0x1052a7a04 in assign sat.c:159
    #3 0x1052a603b in DPLL sat.c:239
    #4 0x1052a6806 in DPLL sat.c:260
    #5 0x1052a6806 in DPLL sat.c:260
    #6 0x1052a6806 in DPLL sat.c:260
    #7 0x1052a6806 in DPLL sat.c:260
    #8 0x1052a550a in main sat.c:125
    #9 0x7fff2053df3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)
0x60200000ed99 is located 1 bytes to the right of 8-byte region [0x60200000ed90,0x60200000ed98)
allocated by thread T0 here:
    #0 0x1055d7400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x1052ac75b in copy sat.c:287
    #2 0x1052a66c7 in DPLL sat.c:259
    #3 0x1052a6806 in DPLL sat.c:260
    #4 0x1052a6806 in DPLL sat.c:260
    #5 0x1052a6806 in DPLL sat.c:260
    #6 0x1052a550a in main sat.c:125
    #7 0x7fff2053df3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)
SUMMARY: AddressSanitizer: heap-buffer-overflow sat.c:334 in binary_search
Shadow bytes around the buggy address:
  0x1c0400001d60: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400001d70: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400001d80: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400001d90: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400001da0: fa fa 00 04 fa fa 00 fa fa fa 00 04 fa fa 00 fa
=>0x1c0400001db0: fa fa 00[fa]fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400001dc0: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400001dd0: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400001de0: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400001df0: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400001e00: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
=================================================================
==98344==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60200000ed99 at pc 0x0001052adeee bp 0x7ffeea961350 sp 0x7ffeea961348
READ of size 4 at 0x60200000ed99 thread T0
    #0 0x1052adeed in binary_search sat.c:337
    #1 0x1052a7fb8 in remove_lit sat.c:315
    #2 0x1052a7a04 in assign sat.c:159
    #3 0x1052a603b in DPLL sat.c:239
    #4 0x1052a6806 in DPLL sat.c:260
    #5 0x1052a6806 in DPLL sat.c:260
    #6 0x1052a6806 in DPLL sat.c:260
    #7 0x1052a6806 in DPLL sat.c:260
    #8 0x1052a550a in main sat.c:125
    #9 0x7fff2053df3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)
0x60200000ed99 is located 1 bytes to the right of 8-byte region [0x60200000ed90,0x60200000ed98)
allocated by thread T0 here:
    #0 0x1055d7400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x1052ac75b in copy sat.c:287
    #2 0x1052a66c7 in DPLL sat.c:259
    #3 0x1052a6806 in DPLL sat.c:260
    #4 0x1052a6806 in DPLL sat.c:260
    #5 0x1052a6806 in DPLL sat.c:260
    #6 0x1052a550a in main sat.c:125
    #7 0x7fff2053df3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)
SUMMARY: AddressSanitizer: heap-buffer-overflow sat.c:337 in binary_search
Shadow bytes around the buggy address:
  0x1c0400001d60: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400001d70: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400001d80: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400001d90: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400001da0: fa fa 00 04 fa fa 00 fa fa fa 00 04 fa fa 00 fa
=>0x1c0400001db0: fa fa 00[fa]fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400001dc0: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400001dd0: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400001de0: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400001df0: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400001e00: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
=================================================================
==98344==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60200000e2b8 at pc 0x0001055d5533 bp 0x7ffeea961c90 sp 0x7ffeea961458
WRITE of size 12 at 0x60200000e2b8 thread T0
    #0 0x1055d5532 in __asan_memcpy+0x262 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x42532)
    #1 0x1052acf59 in copy sat.c:292
    #2 0x1052a6953 in DPLL sat.c:261
    #3 0x1052a6806 in DPLL sat.c:260
    #4 0x1052a6806 in DPLL sat.c:260
    #5 0x1052a550a in main sat.c:125
    #6 0x7fff2053df3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)
0x60200000e2b8 is located 0 bytes to the right of 8-byte region [0x60200000e2b0,0x60200000e2b8)
allocated by thread T0 here:
    #0 0x1055d7400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x1052ac75b in copy sat.c:287
    #2 0x1052a66c7 in DPLL sat.c:259
    #3 0x1052a6806 in DPLL sat.c:260
    #4 0x1052a6806 in DPLL sat.c:260
    #5 0x1052a6806 in DPLL sat.c:260
    #6 0x1052a550a in main sat.c:125
    #7 0x7fff2053df3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)
SUMMARY: AddressSanitizer: heap-buffer-overflow (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x42532) in __asan_memcpy+0x262
Shadow bytes around the buggy address:
  0x1c0400001c00: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 fa
  0x1c0400001c10: fa fa 00 04 fa fa 00 04 fa fa 00 fa fa fa 00 04
  0x1c0400001c20: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400001c30: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400001c40: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
=>0x1c0400001c50: fa fa 00 04 fa fa 00[fa]fa fa 00 04 fa fa 00 04
  0x1c0400001c60: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400001c70: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400001c80: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400001c90: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400001ca0: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
=================================================================
==98344==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60200001e958 at pc 0x0001052a8221 bp 0x7ffeea960f90 sp 0x7ffeea960f88
READ of size 4 at 0x60200001e958 thread T0
    #0 0x1052a8220 in remove_lit sat.c:319
    #1 0x1052a7a04 in assign sat.c:159
    #2 0x1052a603b in DPLL sat.c:239
    #3 0x1052a6b04 in DPLL sat.c:261
    #4 0x1052a6806 in DPLL sat.c:260
    #5 0x1052a6b04 in DPLL sat.c:261
    #6 0x1052a6806 in DPLL sat.c:260
    #7 0x1052a6806 in DPLL sat.c:260
    #8 0x1052a550a in main sat.c:125
    #9 0x7fff2053df3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)
0x60200001e958 is located 0 bytes to the right of 8-byte region [0x60200001e950,0x60200001e958)
allocated by thread T0 here:
    #0 0x1055d7400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x1052ac75b in copy sat.c:287
    #2 0x1052a66c7 in DPLL sat.c:259
    #3 0x1052a6b04 in DPLL sat.c:261
    #4 0x1052a6806 in DPLL sat.c:260
    #5 0x1052a6806 in DPLL sat.c:260
    #6 0x1052a6b04 in DPLL sat.c:261
    #7 0x1052a6806 in DPLL sat.c:260
    #8 0x1052a6806 in DPLL sat.c:260
    #9 0x1052a550a in main sat.c:125
    #10 0x7fff2053df3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)
SUMMARY: AddressSanitizer: heap-buffer-overflow sat.c:319 in remove_lit
Shadow bytes around the buggy address:
  0x1c0400003cd0: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400003ce0: fa fa 00 04 fa fa 00 fa fa fa 00 04 fa fa 00 fa
  0x1c0400003cf0: fa fa 00 fa fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400003d00: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 fa
  0x1c0400003d10: fa fa 00 04 fa fa 00 04 fa fa 00 fa fa fa 00 fa
=>0x1c0400003d20: fa fa 00 04 fa fa 00 04 fa fa 00[fa]fa fa 00 fa
  0x1c0400003d30: fa fa 00 04 fa fa 00 fa fa fa 00 04 fa fa 00 fa
  0x1c0400003d40: fa fa 00 fa fa fa 00 04 fa fa 00 04 fa fa 00 fa
  0x1c0400003d50: fa fa 00 fa fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400003d60: fa fa 00 fa fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400003d70: fa fa 00 fa fa fa 00 04 fa fa 00 04 fa fa 00 04
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
=================================================================
==98344==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60200001ea78 at pc 0x0001055d5480 bp 0x7ffeea960f70 sp 0x7ffeea960738
READ of size 12 at 0x60200001ea78 thread T0
    #0 0x1055d547f in __asan_memcpy+0x1af (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x4247f)
    #1 0x1052acf59 in copy sat.c:292
    #2 0x1052a66c7 in DPLL sat.c:259
    #3 0x1052a6b04 in DPLL sat.c:261
    #4 0x1052a6806 in DPLL sat.c:260
    #5 0x1052a6b04 in DPLL sat.c:261
    #6 0x1052a6806 in DPLL sat.c:260
    #7 0x1052a6806 in DPLL sat.c:260
    #8 0x1052a550a in main sat.c:125
    #9 0x7fff2053df3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)
0x60200001ea78 is located 0 bytes to the right of 8-byte region [0x60200001ea70,0x60200001ea78)
allocated by thread T0 here:
    #0 0x1055d7400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x1052ac75b in copy sat.c:287
    #2 0x1052a66c7 in DPLL sat.c:259
    #3 0x1052a6b04 in DPLL sat.c:261
    #4 0x1052a6806 in DPLL sat.c:260
    #5 0x1052a6806 in DPLL sat.c:260
    #6 0x1052a6b04 in DPLL sat.c:261
    #7 0x1052a6806 in DPLL sat.c:260
    #8 0x1052a6806 in DPLL sat.c:260
    #9 0x1052a550a in main sat.c:125
    #10 0x7fff2053df3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)
SUMMARY: AddressSanitizer: heap-buffer-overflow (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x4247f) in __asan_memcpy+0x1af
Shadow bytes around the buggy address:
  0x1c0400003cf0: fa fa 00 fa fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400003d00: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 fa
  0x1c0400003d10: fa fa 00 04 fa fa 00 04 fa fa 00 fa fa fa 00 fa
  0x1c0400003d20: fa fa 00 04 fa fa 00 04 fa fa 00 fa fa fa 00 fa
  0x1c0400003d30: fa fa 00 04 fa fa 00 fa fa fa 00 04 fa fa 00 fa
=>0x1c0400003d40: fa fa 00 fa fa fa 00 04 fa fa 00 04 fa fa 00[fa]
  0x1c0400003d50: fa fa 00 fa fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400003d60: fa fa 00 fa fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400003d70: fa fa 00 fa fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400003d80: fa fa 00 04 fa fa 00 04 fa fa 00 fa fa fa 00 fa
  0x1c0400003d90: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc