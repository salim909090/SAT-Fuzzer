[!] False input file /Users/salimalwahaibi/Desktop/imperial/sem 2/software relibelity/software-reliability-/inputs/functional_inputs/aim-50-3_4-yes1-1.cnf the error found is:
std output:
SAT
-1 2 -3 -4 -5 -6 -7 8 9 -10 11 -12 -13 -14 15 16 17 18 -19 20 21 22 23 24 25 26 27 -28 -29 -30 31 -32 -33 34 35 36 -37 -38 39 40 -41 42 -43 44 45 46 47 48 -49 -50

std error
sat.c:334:13: runtime error: load of misaligned address 0x602000001731 for type 'int', which requires 4 byte alignment
0x602000001731: note: pointer points here
 00 00 00  10 00 00 00 e8 ff ff ff  de ff ff ff 00 00 00 00  02 11 00 00 0c 00 00 00  02 00 80 1a 00
              ^ 
SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior sat.c:334:13 in 
sat.c:337:13: runtime error: load of misaligned address 0x602000001731 for type 'int', which requires 4 byte alignment
0x602000001731: note: pointer points here
 00 00 00  10 00 00 00 e8 ff ff ff  de ff ff ff 00 00 00 00  02 11 00 00 0c 00 00 00  02 00 80 1a 00
              ^ 
SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior sat.c:337:13 in 
=================================================================
==98109==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000007fb9 at pc 0x000101d61db2 bp 0x7ffeedeac630 sp 0x7ffeedeac628
READ of size 4 at 0x602000007fb9 thread T0
    #0 0x101d61db1 in binary_search sat.c:334
    #1 0x101d5bfb8 in remove_lit sat.c:315
    #2 0x101d5ba04 in assign sat.c:159
    #3 0x101d5a03b in DPLL sat.c:239
    #4 0x101d5a806 in DPLL sat.c:260
    #5 0x101d5a806 in DPLL sat.c:260
    #6 0x101d5a806 in DPLL sat.c:260
    #7 0x101d5ab04 in DPLL sat.c:261
    #8 0x101d5a806 in DPLL sat.c:260
    #9 0x101d5a806 in DPLL sat.c:260
    #10 0x101d5a806 in DPLL sat.c:260
    #11 0x101d5950a in main sat.c:125
    #12 0x7fff2053df3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)
0x602000007fb9 is located 1 bytes to the right of 8-byte region [0x602000007fb0,0x602000007fb8)
allocated by thread T0 here:
    #0 0x101dbb400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x101d6075b in copy sat.c:287
    #2 0x101d5a6c7 in DPLL sat.c:259
    #3 0x101d5a806 in DPLL sat.c:260
    #4 0x101d5a806 in DPLL sat.c:260
    #5 0x101d5ab04 in DPLL sat.c:261
    #6 0x101d5a806 in DPLL sat.c:260
    #7 0x101d5a806 in DPLL sat.c:260
    #8 0x101d5a806 in DPLL sat.c:260
    #9 0x101d5950a in main sat.c:125
    #10 0x7fff2053df3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)
SUMMARY: AddressSanitizer: heap-buffer-overflow sat.c:334 in binary_search
Shadow bytes around the buggy address:
  0x1c0400000fa0: fa fa 00 04 fa fa 00 fa fa fa 00 04 fa fa 00 04
  0x1c0400000fb0: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400000fc0: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400000fd0: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400000fe0: fa fa 00 fa fa fa 00 04 fa fa 00 04 fa fa 00 04
=>0x1c0400000ff0: fa fa 00 04 fa fa 00[fa]fa fa 00 04 fa fa 00 04
  0x1c0400001000: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 fa
  0x1c0400001010: fa fa 00 fa fa fa 00 04 fa fa 00 fa fa fa 00 04
  0x1c0400001020: fa fa 00 fa fa fa 00 fa fa fa 00 fa fa fa 00 04
  0x1c0400001030: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400001040: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
=================================================================
==98109==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000007fb9 at pc 0x000101d61eee bp 0x7ffeedeac630 sp 0x7ffeedeac628
READ of size 4 at 0x602000007fb9 thread T0
    #0 0x101d61eed in binary_search sat.c:337
    #1 0x101d5bfb8 in remove_lit sat.c:315
    #2 0x101d5ba04 in assign sat.c:159
    #3 0x101d5a03b in DPLL sat.c:239
    #4 0x101d5a806 in DPLL sat.c:260
    #5 0x101d5a806 in DPLL sat.c:260
    #6 0x101d5a806 in DPLL sat.c:260
    #7 0x101d5ab04 in DPLL sat.c:261
    #8 0x101d5a806 in DPLL sat.c:260
    #9 0x101d5a806 in DPLL sat.c:260
    #10 0x101d5a806 in DPLL sat.c:260
    #11 0x101d5950a in main sat.c:125
    #12 0x7fff2053df3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)
0x602000007fb9 is located 1 bytes to the right of 8-byte region [0x602000007fb0,0x602000007fb8)
allocated by thread T0 here:
    #0 0x101dbb400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x101d6075b in copy sat.c:287
    #2 0x101d5a6c7 in DPLL sat.c:259
    #3 0x101d5a806 in DPLL sat.c:260
    #4 0x101d5a806 in DPLL sat.c:260
    #5 0x101d5ab04 in DPLL sat.c:261
    #6 0x101d5a806 in DPLL sat.c:260
    #7 0x101d5a806 in DPLL sat.c:260
    #8 0x101d5a806 in DPLL sat.c:260
    #9 0x101d5950a in main sat.c:125
    #10 0x7fff2053df3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)
SUMMARY: AddressSanitizer: heap-buffer-overflow sat.c:337 in binary_search
Shadow bytes around the buggy address:
  0x1c0400000fa0: fa fa 00 04 fa fa 00 fa fa fa 00 04 fa fa 00 04
  0x1c0400000fb0: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400000fc0: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400000fd0: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400000fe0: fa fa 00 fa fa fa 00 04 fa fa 00 04 fa fa 00 04
=>0x1c0400000ff0: fa fa 00 04 fa fa 00[fa]fa fa 00 04 fa fa 00 04
  0x1c0400001000: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 fa
  0x1c0400001010: fa fa 00 fa fa fa 00 04 fa fa 00 fa fa fa 00 04
  0x1c0400001020: fa fa 00 fa fa fa 00 fa fa fa 00 fa fa fa 00 04
  0x1c0400001030: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400001040: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
=================================================================
==98109==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020000075b8 at pc 0x000101db9533 bp 0x7ffeedeacf70 sp 0x7ffeedeac738
WRITE of size 12 at 0x6020000075b8 thread T0
    #0 0x101db9532 in __asan_memcpy+0x262 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x42532)
    #1 0x101d60f59 in copy sat.c:292
    #2 0x101d5a953 in DPLL sat.c:261
    #3 0x101d5a806 in DPLL sat.c:260
    #4 0x101d5ab04 in DPLL sat.c:261
    #5 0x101d5a806 in DPLL sat.c:260
    #6 0x101d5a806 in DPLL sat.c:260
    #7 0x101d5a806 in DPLL sat.c:260
    #8 0x101d5950a in main sat.c:125
    #9 0x7fff2053df3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)
0x6020000075b8 is located 0 bytes to the right of 8-byte region [0x6020000075b0,0x6020000075b8)
allocated by thread T0 here:
    #0 0x101dbb400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x101d6075b in copy sat.c:287
    #2 0x101d5a6c7 in DPLL sat.c:259
    #3 0x101d5a806 in DPLL sat.c:260
    #4 0x101d5a806 in DPLL sat.c:260
    #5 0x101d5ab04 in DPLL sat.c:261
    #6 0x101d5a806 in DPLL sat.c:260
    #7 0x101d5a806 in DPLL sat.c:260
    #8 0x101d5a806 in DPLL sat.c:260
    #9 0x101d5950a in main sat.c:125
    #10 0x7fff2053df3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)
SUMMARY: AddressSanitizer: heap-buffer-overflow (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x42532) in __asan_memcpy+0x262
Shadow bytes around the buggy address:
  0x1c0400000e60: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400000e70: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400000e80: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400000e90: fa fa 00 04 fa fa 00 fa fa fa 00 fa fa fa 00 fa
  0x1c0400000ea0: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
=>0x1c0400000eb0: fa fa 00 04 fa fa 00[fa]fa fa 00 04 fa fa 00 fa
  0x1c0400000ec0: fa fa 00 fa fa fa 00 fa fa fa 00 04 fa fa 00 04
  0x1c0400000ed0: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400000ee0: fa fa 00 fa fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400000ef0: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400000f00: fa fa 00 04 fa fa 00 04 fa fa 00 fa fa fa 00 04
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
=================================================================
==98109==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020000075b8 at pc 0x000101db9480 bp 0x7ffeedeacf70 sp 0x7ffeedeac738
READ of size 12 at 0x6020000075b8 thread T0
    #0 0x101db947f in __asan_memcpy+0x1af (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x4247f)
    #1 0x101d60f59 in copy sat.c:292
    #2 0x101d5a6c7 in DPLL sat.c:259
    #3 0x101d5ab04 in DPLL sat.c:261
    #4 0x101d5ab04 in DPLL sat.c:261
    #5 0x101d5a806 in DPLL sat.c:260
    #6 0x101d5a806 in DPLL sat.c:260
    #7 0x101d5a806 in DPLL sat.c:260
    #8 0x101d5950a in main sat.c:125
    #9 0x7fff2053df3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)
0x6020000075b8 is located 0 bytes to the right of 8-byte region [0x6020000075b0,0x6020000075b8)
allocated by thread T0 here:
    #0 0x101dbb400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x101d6075b in copy sat.c:287
    #2 0x101d5a6c7 in DPLL sat.c:259
    #3 0x101d5a806 in DPLL sat.c:260
    #4 0x101d5a806 in DPLL sat.c:260
    #5 0x101d5ab04 in DPLL sat.c:261
    #6 0x101d5a806 in DPLL sat.c:260
    #7 0x101d5a806 in DPLL sat.c:260
    #8 0x101d5a806 in DPLL sat.c:260
    #9 0x101d5950a in main sat.c:125
    #10 0x7fff2053df3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)
SUMMARY: AddressSanitizer: heap-buffer-overflow (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x4247f) in __asan_memcpy+0x1af
Shadow bytes around the buggy address:
  0x1c0400000e60: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400000e70: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400000e80: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400000e90: fa fa 00 04 fa fa 00 fa fa fa 00 fa fa fa 00 fa
  0x1c0400000ea0: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
=>0x1c0400000eb0: fa fa 00 04 fa fa 00[fa]fa fa 00 04 fa fa 00 fa
  0x1c0400000ec0: fa fa 00 fa fa fa 00 fa fa fa 00 04 fa fa 00 04
  0x1c0400000ed0: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400000ee0: fa fa 00 fa fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400000ef0: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400000f00: fa fa 00 04 fa fa 00 04 fa fa 00 fa fa fa 00 04
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
=================================================================
==98109==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60200000dd78 at pc 0x000101d5c221 bp 0x7ffeedeacb30 sp 0x7ffeedeacb28
READ of size 4 at 0x60200000dd78 thread T0
    #0 0x101d5c220 in remove_lit sat.c:319
    #1 0x101d5ba04 in assign sat.c:159
    #2 0x101d5a03b in DPLL sat.c:239
    #3 0x101d5ab04 in DPLL sat.c:261
    #4 0x101d5a806 in DPLL sat.c:260
    #5 0x101d5a806 in DPLL sat.c:260
    #6 0x101d5ab04 in DPLL sat.c:261
    #7 0x101d5a806 in DPLL sat.c:260
    #8 0x101d5a806 in DPLL sat.c:260
    #9 0x101d5950a in main sat.c:125
    #10 0x7fff2053df3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)
0x60200000dd78 is located 0 bytes to the right of 8-byte region [0x60200000dd70,0x60200000dd78)
allocated by thread T0 here:
    #0 0x101dbb400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x101d6075b in copy sat.c:287
    #2 0x101d5a6c7 in DPLL sat.c:259
    #3 0x101d5a806 in DPLL sat.c:260
    #4 0x101d5a806 in DPLL sat.c:260
    #5 0x101d5a806 in DPLL sat.c:260
    #6 0x101d5ab04 in DPLL sat.c:261
    #7 0x101d5a806 in DPLL sat.c:260
    #8 0x101d5a806 in DPLL sat.c:260
    #9 0x101d5950a in main sat.c:125
    #10 0x7fff2053df3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)
SUMMARY: AddressSanitizer: heap-buffer-overflow sat.c:319 in remove_lit
Shadow bytes around the buggy address:
  0x1c0400001b50: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400001b60: fa fa 00 fa fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400001b70: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 fa
  0x1c0400001b80: fa fa 00 fa fa fa 00 fa fa fa 00 fa fa fa 00 fa
  0x1c0400001b90: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
=>0x1c0400001ba0: fa fa 00 fa fa fa 00 fa fa fa 00 04 fa fa 00[fa]
  0x1c0400001bb0: fa fa 00 fa fa fa 00 fa fa fa 00 04 fa fa 00 04
  0x1c0400001bc0: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400001bd0: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400001be0: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400001bf0: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc