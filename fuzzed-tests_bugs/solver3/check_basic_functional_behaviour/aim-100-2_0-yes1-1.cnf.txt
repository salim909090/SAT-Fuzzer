[!] False input file /Users/salimalwahaibi/Desktop/imperial/sem 2/software relibelity/software-reliability-/inputs/functional_inputs/aim-100-2_0-yes1-1.cnf the error found is:
std output:
SAT
-1 -2 -3 4 -5 6 7 -8 -9 -10 11 12 -13 -14 15 -16 -17 -18 19 20 21 -22 -23 24 25 -26 -27 28 -29 30 31 32 -33 34 35 -36 -37 38 -39 -40 41 42 43 -44 -45 46 47 48 49 50 51 -52 53 -54 -55 -56 -57 -58 -59 60 61 -62 63 -64 65 66 -67 68 -69 -70 71 72 73 74 75 -76 77 -78 -79 -80 81 82 83 -84 85 86 -87 88 -89 90 -91 92 -93 94 -95 96 -97 98 99 100

std error
sat.c:334:13: runtime error: load of misaligned address 0x6020000032d1 for type 'int', which requires 4 byte alignment
0x6020000032d1: note: pointer points here
 00 00 00  df ff ff ff 43 00 00 00  b2 ff ff ff 00 00 00 00  02 11 00 00 0c 00 00 00  02 00 80 3b 00
              ^ 
SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior sat.c:334:13 in 
sat.c:337:13: runtime error: load of misaligned address 0x6020000032d1 for type 'int', which requires 4 byte alignment
0x6020000032d1: note: pointer points here
 00 00 00  df ff ff ff 43 00 00 00  b2 ff ff ff 00 00 00 00  02 11 00 00 0c 00 00 00  02 00 80 3b 00
              ^ 
SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior sat.c:337:13 in 
=================================================================
==97715==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60200000a638 at pc 0x00010655d533 bp 0x7ffee9707b10 sp 0x7ffee97072d8
WRITE of size 12 at 0x60200000a638 thread T0
    #0 0x10655d532 in __asan_memcpy+0x262 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x42532)
    #1 0x106505f59 in copy sat.c:292
    #2 0x1064ff953 in DPLL sat.c:261
    #3 0x1064ff806 in DPLL sat.c:260
    #4 0x1064ff806 in DPLL sat.c:260
    #5 0x1064ff806 in DPLL sat.c:260
    #6 0x1064ff806 in DPLL sat.c:260
    #7 0x1064ff806 in DPLL sat.c:260
    #8 0x1064ff806 in DPLL sat.c:260
    #9 0x1064fe50a in main sat.c:125
    #10 0x7fff2053df3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)
0x60200000a638 is located 0 bytes to the right of 8-byte region [0x60200000a630,0x60200000a638)
allocated by thread T0 here:
    #0 0x10655f400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x10650575b in copy sat.c:287
    #2 0x1064ff6c7 in DPLL sat.c:259
    #3 0x1064ff806 in DPLL sat.c:260
    #4 0x1064ff806 in DPLL sat.c:260
    #5 0x1064ff806 in DPLL sat.c:260
    #6 0x1064ff806 in DPLL sat.c:260
    #7 0x1064ff806 in DPLL sat.c:260
    #8 0x1064ff806 in DPLL sat.c:260
    #9 0x1064ff806 in DPLL sat.c:260
    #10 0x1064fe50a in main sat.c:125
    #11 0x7fff2053df3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)
SUMMARY: AddressSanitizer: heap-buffer-overflow (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x42532) in __asan_memcpy+0x262
Shadow bytes around the buggy address:
  0x1c0400001470: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400001480: fa fa 00 04 fa fa 00 fa fa fa 00 04 fa fa 00 04
  0x1c0400001490: fa fa 00 fa fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c04000014a0: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c04000014b0: fa fa 00 fa fa fa 00 04 fa fa 00 04 fa fa 00 04
=>0x1c04000014c0: fa fa 00 04 fa fa 00[fa]fa fa 00 fa fa fa 00 fa
  0x1c04000014d0: fa fa 00 fa fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c04000014e0: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c04000014f0: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400001500: fa fa 00 fa fa fa 00 04 fa fa 00 fa fa fa 00 04
  0x1c0400001510: fa fa 00 fa fa fa 00 04 fa fa 00 fa fa fa 00 04
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
=================================================================
==97715==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60200000a638 at pc 0x000106506db2 bp 0x7ffee9707630 sp 0x7ffee9707628
READ of size 4 at 0x60200000a638 thread T0
    #0 0x106506db1 in binary_search sat.c:334
    #1 0x106500fb8 in remove_lit sat.c:315
    #2 0x106500a04 in assign sat.c:159
    #3 0x1064ff03b in DPLL sat.c:239
    #4 0x1064ffb04 in DPLL sat.c:261
    #5 0x1064ff806 in DPLL sat.c:260
    #6 0x1064ff806 in DPLL sat.c:260
    #7 0x1064ff806 in DPLL sat.c:260
    #8 0x1064ff806 in DPLL sat.c:260
    #9 0x1064ff806 in DPLL sat.c:260
    #10 0x1064ff806 in DPLL sat.c:260
    #11 0x1064fe50a in main sat.c:125
    #12 0x7fff2053df3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)
0x60200000a638 is located 0 bytes to the right of 8-byte region [0x60200000a630,0x60200000a638)
allocated by thread T0 here:
    #0 0x10655f400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x10650575b in copy sat.c:287
    #2 0x1064ff6c7 in DPLL sat.c:259
    #3 0x1064ff806 in DPLL sat.c:260
    #4 0x1064ff806 in DPLL sat.c:260
    #5 0x1064ff806 in DPLL sat.c:260
    #6 0x1064ff806 in DPLL sat.c:260
    #7 0x1064ff806 in DPLL sat.c:260
    #8 0x1064ff806 in DPLL sat.c:260
    #9 0x1064ff806 in DPLL sat.c:260
    #10 0x1064fe50a in main sat.c:125
    #11 0x7fff2053df3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)
SUMMARY: AddressSanitizer: heap-buffer-overflow sat.c:334 in binary_search
Shadow bytes around the buggy address:
  0x1c0400001470: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400001480: fa fa 00 04 fa fa 00 fa fa fa 00 04 fa fa 00 04
  0x1c0400001490: fa fa 00 fa fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c04000014a0: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c04000014b0: fa fa 00 fa fa fa 00 04 fa fa 00 04 fa fa 00 04
=>0x1c04000014c0: fa fa 00 04 fa fa 00[fa]fa fa 00 fa fa fa 00 fa
  0x1c04000014d0: fa fa 00 fa fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c04000014e0: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c04000014f0: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400001500: fa fa 00 fa fa fa 00 04 fa fa 00 fa fa fa 00 04
  0x1c0400001510: fa fa 00 fa fa fa 00 04 fa fa 00 fa fa fa 00 04
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
=================================================================
==97715==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020000091f8 at pc 0x00010655d480 bp 0x7ffee9707f70 sp 0x7ffee9707738
READ of size 12 at 0x6020000091f8 thread T0
    #0 0x10655d47f in __asan_memcpy+0x1af (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x4247f)
    #1 0x106505f59 in copy sat.c:292
    #2 0x1064ff6c7 in DPLL sat.c:259
    #3 0x1064ffb04 in DPLL sat.c:261
    #4 0x1064ff806 in DPLL sat.c:260
    #5 0x1064ff806 in DPLL sat.c:260
    #6 0x1064ff806 in DPLL sat.c:260
    #7 0x1064ff806 in DPLL sat.c:260
    #8 0x1064fe50a in main sat.c:125
    #9 0x7fff2053df3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)
0x6020000091f8 is located 0 bytes to the right of 8-byte region [0x6020000091f0,0x6020000091f8)
allocated by thread T0 here:
    #0 0x10655f400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x10650575b in copy sat.c:287
    #2 0x1064ff6c7 in DPLL sat.c:259
    #3 0x1064ff806 in DPLL sat.c:260
    #4 0x1064ff806 in DPLL sat.c:260
    #5 0x1064ff806 in DPLL sat.c:260
    #6 0x1064ff806 in DPLL sat.c:260
    #7 0x1064ff806 in DPLL sat.c:260
    #8 0x1064ff806 in DPLL sat.c:260
    #9 0x1064fe50a in main sat.c:125
    #10 0x7fff2053df3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)
SUMMARY: AddressSanitizer: heap-buffer-overflow (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x4247f) in __asan_memcpy+0x1af
Shadow bytes around the buggy address:
  0x1c04000011e0: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c04000011f0: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400001200: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400001210: fa fa 00 04 fa fa 00 04 fa fa 00 fa fa fa 00 04
  0x1c0400001220: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
=>0x1c0400001230: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00[fa]
  0x1c0400001240: fa fa 00 fa fa fa 00 04 fa fa 00 fa fa fa 00 04
  0x1c0400001250: fa fa 00 fa fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400001260: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400001270: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400001280: fa fa 00 fa fa fa 00 04 fa fa 00 04 fa fa 00 04
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
=================================================================
==97715==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000011bd8 at pc 0x000106501221 bp 0x7ffee9708850 sp 0x7ffee9708848
READ of size 4 at 0x602000011bd8 thread T0
    #0 0x106501220 in remove_lit sat.c:319
    #1 0x106500a04 in assign sat.c:159
    #2 0x1064ff03b in DPLL sat.c:239
    #3 0x1064ffb04 in DPLL sat.c:261
    #4 0x1064ff806 in DPLL sat.c:260
    #5 0x1064ff806 in DPLL sat.c:260
    #6 0x1064fe50a in main sat.c:125
    #7 0x7fff2053df3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)
0x602000011bd8 is located 0 bytes to the right of 8-byte region [0x602000011bd0,0x602000011bd8)
allocated by thread T0 here:
    #0 0x10655f400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x10650575b in copy sat.c:287
    #2 0x1064ff6c7 in DPLL sat.c:259
    #3 0x1064ffb04 in DPLL sat.c:261
    #4 0x1064ff806 in DPLL sat.c:260
    #5 0x1064ffb04 in DPLL sat.c:261
    #6 0x1064ff806 in DPLL sat.c:260
    #7 0x1064ff806 in DPLL sat.c:260
    #8 0x1064ff806 in DPLL sat.c:260
    #9 0x1064ff806 in DPLL sat.c:260
    #10 0x1064fe50a in main sat.c:125
    #11 0x7fff2053df3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)
SUMMARY: AddressSanitizer: heap-buffer-overflow sat.c:319 in remove_lit
Shadow bytes around the buggy address:
  0x1c0400002320: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400002330: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400002340: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400002350: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400002360: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
=>0x1c0400002370: fa fa 00 04 fa fa 00 04 fa fa 00[fa]fa fa 00 04
  0x1c0400002380: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 fa
  0x1c0400002390: fa fa 00 04 fa fa 00 fa fa fa 00 04 fa fa 00 04
  0x1c04000023a0: fa fa 00 04 fa fa 00 fa fa fa 00 04 fa fa 00 04
  0x1c04000023b0: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c04000023c0: fa fa 00 fa fa fa 00 04 fa fa 00 04 fa fa 00 04
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
=================================================================
==97715==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000037b59 at pc 0x000106506eee bp 0x7ffee9706050 sp 0x7ffee9706048
READ of size 4 at 0x602000037b59 thread T0
    #0 0x106506eed in binary_search sat.c:337
    #1 0x106500fb8 in remove_lit sat.c:315
    #2 0x106500a04 in assign sat.c:159
    #3 0x1064ff03b in DPLL sat.c:239
    #4 0x1064ff806 in DPLL sat.c:260
    #5 0x1064ff806 in DPLL sat.c:260
    #6 0x1064ff806 in DPLL sat.c:260
    #7 0x1064ff806 in DPLL sat.c:260
    #8 0x1064ff806 in DPLL sat.c:260
    #9 0x1064ffb04 in DPLL sat.c:261
    #10 0x1064ff806 in DPLL sat.c:260
    #11 0x1064ff806 in DPLL sat.c:260
    #12 0x1064ffb04 in DPLL sat.c:261
    #13 0x1064ff806 in DPLL sat.c:260
    #14 0x1064ffb04 in DPLL sat.c:261
    #15 0x1064ff806 in DPLL sat.c:260
    #16 0x1064fe50a in main sat.c:125
    #17 0x7fff2053df3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)
0x602000037b59 is located 1 bytes to the right of 8-byte region [0x602000037b50,0x602000037b58)
allocated by thread T0 here:
    #0 0x10655f400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x10650575b in copy sat.c:287
    #2 0x1064ff6c7 in DPLL sat.c:259
    #3 0x1064ff806 in DPLL sat.c:260
    #4 0x1064ff806 in DPLL sat.c:260
    #5 0x1064ff806 in DPLL sat.c:260
    #6 0x1064ff806 in DPLL sat.c:260
    #7 0x1064ffb04 in DPLL sat.c:261
    #8 0x1064ff806 in DPLL sat.c:260
    #9 0x1064ff806 in DPLL sat.c:260
    #10 0x1064ffb04 in DPLL sat.c:261
    #11 0x1064ff806 in DPLL sat.c:260
    #12 0x1064ffb04 in DPLL sat.c:261
    #13 0x1064ff806 in DPLL sat.c:260
    #14 0x1064fe50a in main sat.c:125
    #15 0x7fff2053df3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)
SUMMARY: AddressSanitizer: heap-buffer-overflow sat.c:337 in binary_search
Shadow bytes around the buggy address:
  0x1c0400006f10: fa fa 00 04 fa fa 00 fa fa fa 00 04 fa fa 00 fa
  0x1c0400006f20: fa fa 00 fa fa fa 00 fa fa fa 00 fa fa fa 00 fa
  0x1c0400006f30: fa fa 00 fa fa fa 00 04 fa fa 00 fa fa fa 00 fa
  0x1c0400006f40: fa fa 00 fa fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400006f50: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
=>0x1c0400006f60: fa fa 00 fa fa fa 00 fa fa fa 00[fa]fa fa 00 fa
  0x1c0400006f70: fa fa 00 04 fa fa 00 fa fa fa 00 04 fa fa 00 04
  0x1c0400006f80: fa fa 00 04 fa fa 00 04 fa fa 00 fa fa fa 00 fa
  0x1c0400006f90: fa fa 00 04 fa fa 00 fa fa fa 00 fa fa fa 00 04
  0x1c0400006fa0: fa fa 00 04 fa fa 00 04 fa fa 00 fa fa fa 00 04
  0x1c0400006fb0: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc