input file taken from /Users/salimalwahaibi/Desktop/imperial/sem 2/software relibelity/software-reliability-/inputs/bench_1024.smt2.1.cnf the error found is:
sat.c:334:13: runtime error: load of misaligned address 0x625000276105 for type 'int', which requires 4 byte alignment
0x625000276105: note: pointer points here
 05 00 00 35 f8 ff ff  be be be be be be be be  be be be be be be be be  be be be be be be be be  be
             ^ 
SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior sat.c:334:13 in 
sat.c:337:13: runtime error: load of misaligned address 0x625000276105 for type 'int', which requires 4 byte alignment
0x625000276105: note: pointer points here
 05 00 00 35 f8 ff ff  be be be be be be be be  be be be be be be be be  be be be be be be be be  be
             ^ 
SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior sat.c:337:13 in 
=================================================================
==78829==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000039ef9 at pc 0x000103c2ddb2 bp 0x7ffeebfe1c90 sp 0x7ffeebfe1c88
READ of size 4 at 0x602000039ef9 thread T0
    #0 0x103c2ddb1 in binary_search sat.c:334
    #1 0x103c27fb8 in remove_lit sat.c:315
    #2 0x103c27a04 in assign sat.c:159
    #3 0x103c2603b in DPLL sat.c:239
    #4 0x103c26806 in DPLL sat.c:260
    #5 0x103c26806 in DPLL sat.c:260
    #6 0x103c2550a in main sat.c:125
    #7 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

0x602000039ef9 is located 1 bytes to the right of 8-byte region [0x602000039ef0,0x602000039ef8)
allocated by thread T0 here:
    #0 0x103c85400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x103c2c75b in copy sat.c:287
    #2 0x103c266c7 in DPLL sat.c:259
    #3 0x103c26806 in DPLL sat.c:260
    #4 0x103c2550a in main sat.c:125
    #5 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

SUMMARY: AddressSanitizer: heap-buffer-overflow sat.c:334 in binary_search
Shadow bytes around the buggy address:
  0x1c0400007380: fa fa 00 fa fa fa 00 04 fa fa 00 04 fa fa 00 fa
  0x1c0400007390: fa fa 00 fa fa fa 00 04 fa fa 00 fa fa fa 00 04
  0x1c04000073a0: fa fa 00 fa fa fa 00 fa fa fa 00 04 fa fa 00 fa
  0x1c04000073b0: fa fa 00 fa fa fa 00 fa fa fa 00 fa fa fa 00 04
  0x1c04000073c0: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 fa
=>0x1c04000073d0: fa fa 00 04 fa fa 00 fa fa fa 00 fa fa fa 00[fa]
  0x1c04000073e0: fa fa 00 04 fa fa 00 04 fa fa 00 fa fa fa 00 04
  0x1c04000073f0: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400007400: fa fa 00 00 fa fa 00 fa fa fa 00 04 fa fa 00 fa
  0x1c0400007410: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 fa
  0x1c0400007420: fa fa 00 fa fa fa 00 04 fa fa 00 04 fa fa 00 04
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
=================================================================
==78829==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000039ef9 at pc 0x000103c2deee bp 0x7ffeebfe1c90 sp 0x7ffeebfe1c88
READ of size 4 at 0x602000039ef9 thread T0
    #0 0x103c2deed in binary_search sat.c:337
    #1 0x103c27fb8 in remove_lit sat.c:315
    #2 0x103c27a04 in assign sat.c:159
    #3 0x103c2603b in DPLL sat.c:239
    #4 0x103c26806 in DPLL sat.c:260
    #5 0x103c26806 in DPLL sat.c:260
    #6 0x103c2550a in main sat.c:125
    #7 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

0x602000039ef9 is located 1 bytes to the right of 8-byte region [0x602000039ef0,0x602000039ef8)
allocated by thread T0 here:
    #0 0x103c85400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x103c2c75b in copy sat.c:287
    #2 0x103c266c7 in DPLL sat.c:259
    #3 0x103c26806 in DPLL sat.c:260
    #4 0x103c2550a in main sat.c:125
    #5 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

SUMMARY: AddressSanitizer: heap-buffer-overflow sat.c:337 in binary_search
Shadow bytes around the buggy address:
  0x1c0400007380: fa fa 00 fa fa fa 00 04 fa fa 00 04 fa fa 00 fa
  0x1c0400007390: fa fa 00 fa fa fa 00 04 fa fa 00 fa fa fa 00 04
  0x1c04000073a0: fa fa 00 fa fa fa 00 fa fa fa 00 04 fa fa 00 fa
  0x1c04000073b0: fa fa 00 fa fa fa 00 fa fa fa 00 fa fa fa 00 04
  0x1c04000073c0: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 fa
=>0x1c04000073d0: fa fa 00 04 fa fa 00 fa fa fa 00 fa fa fa 00[fa]
  0x1c04000073e0: fa fa 00 04 fa fa 00 04 fa fa 00 fa fa fa 00 04
  0x1c04000073f0: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04
  0x1c0400007400: fa fa 00 00 fa fa 00 fa fa fa 00 04 fa fa 00 fa
  0x1c0400007410: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 fa
  0x1c0400007420: fa fa 00 fa fa fa 00 04 fa fa 00 04 fa fa 00 04
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
