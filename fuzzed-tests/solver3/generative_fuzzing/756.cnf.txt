input file taken from /Users/salimalwahaibi/Desktop/imperial/sem 2/software relibelity/software-reliability-/inputs/solver3/generative_fuzzing/756.cnf the error found is:
=================================================================
==23390==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6040000005b8 at pc 0x000107c31e63 bp 0x7ffee7fd4f90 sp 0x7ffee7fd4f88
WRITE of size 4 at 0x6040000005b8 thread T0
    #0 0x107c31e62 in main sat.c:98
    #1 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

0x6040000005b8 is located 0 bytes to the right of 40-byte region [0x604000000590,0x6040000005b8)
allocated by thread T0 here:
    #0 0x107c95400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x107c31519 in main sat.c:83
    #2 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

SUMMARY: AddressSanitizer: heap-buffer-overflow sat.c:98 in main
Shadow bytes around the buggy address:
  0x1c0800000060: fa fa 00 00 00 00 00 05 fa fa 00 00 00 00 00 fa
  0x1c0800000070: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 00 fa
  0x1c0800000080: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 00 fa
  0x1c0800000090: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 00 fa
  0x1c08000000a0: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 00 fa
=>0x1c08000000b0: fa fa 00 00 00 00 00[fa]fa fa fa fa fa fa fa fa
  0x1c08000000c0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c08000000d0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c08000000e0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c08000000f0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c0800000100: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
=================================================================
==23390==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6040000005b8 at pc 0x000107c30615 bp 0x7ffee7fd46d0 sp 0x7ffee7fd46c8
READ of size 4 at 0x6040000005b8 thread T0
    #0 0x107c30614 in abscmpfunc sat.c:39
    #1 0x107c8ee79 in wrap_qsort+0x79 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x3de79)
    #2 0x107c333b4 in main sat.c:122
    #3 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

0x6040000005b8 is located 0 bytes to the right of 40-byte region [0x604000000590,0x6040000005b8)
allocated by thread T0 here:
    #0 0x107c95400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x107c31519 in main sat.c:83
    #2 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

SUMMARY: AddressSanitizer: heap-buffer-overflow sat.c:39 in abscmpfunc
Shadow bytes around the buggy address:
  0x1c0800000060: fa fa 00 00 00 00 00 05 fa fa 00 00 00 00 00 fa
  0x1c0800000070: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 00 fa
  0x1c0800000080: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 00 fa
  0x1c0800000090: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 00 fa
  0x1c08000000a0: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 00 fa
=>0x1c08000000b0: fa fa 00 00 00 00 00[fa]fa fa fd fd fd fd fd fd
  0x1c08000000c0: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  0x1c08000000d0: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  0x1c08000000e0: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  0x1c08000000f0: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  0x1c0800000100: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
=================================================================
==23390==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6040000005b8 at pc 0x000107c3057a bp 0x7ffee7fd4610 sp 0x7ffee7fd4608
READ of size 4 at 0x6040000005b8 thread T0
    #0 0x107c30579 in abscmpfunc sat.c:39
    #1 0x7fff20447236 in _qsort+0x31b (libsystem_c.dylib:x86_64+0x5d236)
    #2 0x107c8eee9 in wrap_qsort+0xe9 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x3dee9)
    #3 0x107c333b4 in main sat.c:122
    #4 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

0x6040000005b8 is located 0 bytes to the right of 40-byte region [0x604000000590,0x6040000005b8)
allocated by thread T0 here:
    #0 0x107c95400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x107c31519 in main sat.c:83
    #2 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

SUMMARY: AddressSanitizer: heap-buffer-overflow sat.c:39 in abscmpfunc
Shadow bytes around the buggy address:
  0x1c0800000060: fa fa 00 00 00 00 00 05 fa fa 00 00 00 00 00 fa
  0x1c0800000070: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 00 fa
  0x1c0800000080: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 00 fa
  0x1c0800000090: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 00 fa
  0x1c08000000a0: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 00 fa
=>0x1c08000000b0: fa fa 00 00 00 00 00[fa]fa fa fd fd fd fd fd fd
  0x1c08000000c0: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  0x1c08000000d0: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  0x1c08000000e0: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  0x1c08000000f0: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  0x1c0800000100: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
=================================================================
==23390==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6040000005b8 at pc 0x000107c8f058 bp 0x7ffee7fd4f90 sp 0x7ffee7fd4738
WRITE of size 44 at 0x6040000005b8 thread T0
    #0 0x107c8f057 in wrap_qsort+0x257 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x3e057)
    #1 0x107c333b4 in main sat.c:122
    #2 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

0x6040000005b8 is located 0 bytes to the right of 40-byte region [0x604000000590,0x6040000005b8)
allocated by thread T0 here:
    #0 0x107c95400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x107c31519 in main sat.c:83
    #2 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

SUMMARY: AddressSanitizer: heap-buffer-overflow (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x3e057) in wrap_qsort+0x257
Shadow bytes around the buggy address:
  0x1c0800000060: fa fa 00 00 00 00 00 05 fa fa 00 00 00 00 00 fa
  0x1c0800000070: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 00 fa
  0x1c0800000080: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 00 fa
  0x1c0800000090: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 00 fa
  0x1c08000000a0: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 00 fa
=>0x1c08000000b0: fa fa 00 00 00 00 00[fa]fa fa fd fd fd fd fd fd
  0x1c08000000c0: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  0x1c08000000d0: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  0x1c08000000e0: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  0x1c08000000f0: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  0x1c0800000100: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
=================================================================
==23390==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x604000000b7c at pc 0x000107c3bdb2 bp 0x7ffee7fd4550 sp 0x7ffee7fd4548
READ of size 4 at 0x604000000b7c thread T0
    #0 0x107c3bdb1 in binary_search sat.c:334
    #1 0x107c35fb8 in remove_lit sat.c:315
    #2 0x107c35a04 in assign sat.c:159
    #3 0x107c3403b in DPLL sat.c:239
    #4 0x107c3350a in main sat.c:125
    #5 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

0x604000000b7c is located 4 bytes to the right of 40-byte region [0x604000000b50,0x604000000b78)
allocated by thread T0 here:
    #0 0x107c95400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x107c31519 in main sat.c:83
    #2 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

SUMMARY: AddressSanitizer: heap-buffer-overflow sat.c:334 in binary_search
Shadow bytes around the buggy address:
  0x1c0800000110: fa fa fd fd fd fd fd fa fa fa fd fd fd fd fd fd
  0x1c0800000120: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  0x1c0800000130: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  0x1c0800000140: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  0x1c0800000150: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 00 fa
=>0x1c0800000160: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 00[fa]
  0x1c0800000170: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 00 fa
  0x1c0800000180: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 00 fa
  0x1c0800000190: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 00 fa
  0x1c08000001a0: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 00 fa
  0x1c08000001b0: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 00 fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
=================================================================
==23390==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x604000000b80 at pc 0x000107c36221 bp 0x7ffee7fd45f0 sp 0x7ffee7fd45e8
READ of size 4 at 0x604000000b80 thread T0
    #0 0x107c36220 in remove_lit sat.c:319
    #1 0x107c35a04 in assign sat.c:159
    #2 0x107c3403b in DPLL sat.c:239
    #3 0x107c3350a in main sat.c:125
    #4 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

0x604000000b80 is located 8 bytes to the right of 40-byte region [0x604000000b50,0x604000000b78)
allocated by thread T0 here:
    #0 0x107c95400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x107c31519 in main sat.c:83
    #2 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

SUMMARY: AddressSanitizer: heap-buffer-overflow sat.c:319 in remove_lit
Shadow bytes around the buggy address:
  0x1c0800000120: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  0x1c0800000130: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  0x1c0800000140: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  0x1c0800000150: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 00 fa
  0x1c0800000160: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 00 fa
=>0x1c0800000170:[fa]fa 00 00 00 00 00 fa fa fa 00 00 00 00 00 fa
  0x1c0800000180: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 00 fa
  0x1c0800000190: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 00 fa
  0x1c08000001a0: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 00 fa
  0x1c08000001b0: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 00 fa
  0x1c08000001c0: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 00 fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
=================================================================
==23390==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x604000000b7c at pc 0x000107c3638c bp 0x7ffee7fd45f0 sp 0x7ffee7fd45e8
WRITE of size 4 at 0x604000000b7c thread T0
    #0 0x107c3638b in remove_lit sat.c:319
    #1 0x107c35a04 in assign sat.c:159
    #2 0x107c3403b in DPLL sat.c:239
    #3 0x107c3350a in main sat.c:125
    #4 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

0x604000000b7c is located 4 bytes to the right of 40-byte region [0x604000000b50,0x604000000b78)
allocated by thread T0 here:
    #0 0x107c95400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x107c31519 in main sat.c:83
    #2 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

SUMMARY: AddressSanitizer: heap-buffer-overflow sat.c:319 in remove_lit
Shadow bytes around the buggy address:
  0x1c0800000110: fa fa fd fd fd fd fd fa fa fa fd fd fd fd fd fd
  0x1c0800000120: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  0x1c0800000130: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  0x1c0800000140: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  0x1c0800000150: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 00 fa
=>0x1c0800000160: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 00[fa]
  0x1c0800000170: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 00 fa
  0x1c0800000180: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 00 fa
  0x1c0800000190: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 00 fa
  0x1c08000001a0: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 00 fa
  0x1c08000001b0: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 00 fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
sat.c:334:13: runtime error: load of misaligned address 0x604000000c25 for type 'int', which requires 4 byte alignment
0x604000000c25: note: pointer points here
 00 00 00 07 00 00 00  f9 ff ff ff f8 ff ff ff  08 00 00 00 09 00 00 00  00 00 00 00 00 00 00 00  02
             ^ 
SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior sat.c:334:13 in 
sat.c:337:13: runtime error: load of misaligned address 0x604000000c25 for type 'int', which requires 4 byte alignment
0x604000000c25: note: pointer points here
 00 00 00 07 00 00 00  f9 ff ff ff f8 ff ff ff  08 00 00 00 09 00 00 00  00 00 00 00 00 00 00 00  02
             ^ 
SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior sat.c:337:13 in 
=================================================================
==23390==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x604000000eb8 at pc 0x000107c3beee bp 0x7ffee7fd4550 sp 0x7ffee7fd4548
READ of size 4 at 0x604000000eb8 thread T0
    #0 0x107c3beed in binary_search sat.c:337
    #1 0x107c35fb8 in remove_lit sat.c:315
    #2 0x107c35a04 in assign sat.c:159
    #3 0x107c3403b in DPLL sat.c:239
    #4 0x107c3350a in main sat.c:125
    #5 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

0x604000000eb8 is located 40 bytes inside of 1786773505-byte region [0x604000000e90,0x60406a800e91)
allocated by thread T0 here:
    #0 0x107c95400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x107c31519 in main sat.c:83
    #2 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

SUMMARY: AddressSanitizer: heap-buffer-overflow sat.c:337 in binary_search
Shadow bytes around the buggy address:
  0x1c0800000180: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 00 fa
  0x1c0800000190: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 00 fa
  0x1c08000001a0: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 00 fa
  0x1c08000001b0: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 00 fa
  0x1c08000001c0: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 00 fa
=>0x1c08000001d0: fa fa 00 00 00 00 00[fa]fa fa 00 00 00 00 00 fa
  0x1c08000001e0: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 00 fa
  0x1c08000001f0: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 00 fa
  0x1c0800000200: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 00 fa
  0x1c0800000210: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 00 fa
  0x1c0800000220: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 00 fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
=================================================================
==23390==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x607000000238 at pc 0x000107c350b0 bp 0x7ffee7fd4850 sp 0x7ffee7fd4848
READ of size 8 at 0x607000000238 thread T0
    #0 0x107c350af in assign sat.c:148
    #1 0x107c34735 in DPLL sat.c:260
    #2 0x107c3350a in main sat.c:125
    #3 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

0x607000000238 is located 232 bytes to the right of 80-byte region [0x607000000100,0x607000000150)
allocated by thread T0 here:
    #0 0x107c957d5 in wrap_calloc+0xa5 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x447d5)
    #1 0x107c39c30 in copy sat.c:273
    #2 0x107c346c7 in DPLL sat.c:259
    #3 0x107c3350a in main sat.c:125
    #4 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

SUMMARY: AddressSanitizer: heap-buffer-overflow sat.c:148 in assign
Shadow bytes around the buggy address:
  0x1c0dfffffff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1c0e00000000: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 fa fa
  0x1c0e00000010: fa fa 00 00 00 00 00 00 00 00 00 fa fa fa fa fa
  0x1c0e00000020: 00 00 00 00 00 00 00 00 00 00 fa fa fa fa fa fa
  0x1c0e00000030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
=>0x1c0e00000040: fa fa fa fa fa fa fa[fa]fa fa fa fa fa fa fa fa
  0x1c0e00000050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c0e00000060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c0e00000070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c0e00000080: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c0e00000090: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
=================================================================
==23390==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60400000252c at pc 0x000107c3525f bp 0x7ffee7fd4850 sp 0x7ffee7fd4848
READ of size 4 at 0x60400000252c thread T0
    #0 0x107c3525e in assign sat.c:149
    #1 0x107c34735 in DPLL sat.c:260
    #2 0x107c3350a in main sat.c:125
    #3 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

0x60400000252c is located 116 bytes to the right of 40-byte region [0x604000002490,0x6040000024b8)
allocated by thread T0 here:
    #0 0x107c957d5 in wrap_calloc+0xa5 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x447d5)
    #1 0x107c39d61 in copy sat.c:274
    #2 0x107c346c7 in DPLL sat.c:259
    #3 0x107c3350a in main sat.c:125
    #4 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

SUMMARY: AddressSanitizer: heap-buffer-overflow sat.c:149 in assign
Shadow bytes around the buggy address:
  0x1c0800000450: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 00 fa
  0x1c0800000460: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 00 fa
  0x1c0800000470: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 00 fa
  0x1c0800000480: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 00 fa
  0x1c0800000490: fa fa 00 00 00 00 00 fa fa fa fa fa fa fa fa fa
=>0x1c08000004a0: fa fa fa fa fa[fa]fa fa fa fa fa fa fa fa fa fa
  0x1c08000004b0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c08000004c0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c08000004d0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c08000004e0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c08000004f0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
AddressSanitizer:DEADLYSIGNAL
=================================================================
==23390==ERROR: AddressSanitizer: BUS on unknown address (pc 0x000107c3526b bp 0x7ffee7ee5280 sp 0x7ffee7ee4fe0 T0)
==23390==The signal is caused by a READ memory access.
==23390==Hint: this fault was caused by a dereference of a high value address (see register values below).  Disassemble the provided pc to learn which register was used.
    #0 0x107c3526b in assign sat.c:149
    #1 0x107c34735 in DPLL sat.c:260
    #2 0x107c34806 in DPLL sat.c:260
    #3 0x107c34806 in DPLL sat.c:260
    #4 0x107c34806 in DPLL sat.c:260
    #5 0x107c34806 in DPLL sat.c:260
    #6 0x107c34806 in DPLL sat.c:260
    #7 0x107c34806 in DPLL sat.c:260
    #8 0x107c34806 in DPLL sat.c:260
    #9 0x107c34806 in DPLL sat.c:260
    #10 0x107c34806 in DPLL sat.c:260
    #11 0x107c34806 in DPLL sat.c:260
    #12 0x107c34806 in DPLL sat.c:260
    #13 0x107c34806 in DPLL sat.c:260
    #14 0x107c34806 in DPLL sat.c:260
    #15 0x107c34806 in DPLL sat.c:260
    #16 0x107c34806 in DPLL sat.c:260
    #17 0x107c34806 in DPLL sat.c:260
    #18 0x107c34806 in DPLL sat.c:260
    #19 0x107c34806 in DPLL sat.c:260
    #20 0x107c34806 in DPLL sat.c:260
    #21 0x107c34806 in DPLL sat.c:260
    #22 0x107c34806 in DPLL sat.c:260
    #23 0x107c34806 in DPLL sat.c:260
    #24 0x107c34806 in DPLL sat.c:260
    #25 0x107c34806 in DPLL sat.c:260
    #26 0x107c34806 in DPLL sat.c:260
    #27 0x107c34806 in DPLL sat.c:260
    #28 0x107c34806 in DPLL sat.c:260
    #29 0x107c34806 in DPLL sat.c:260
    #30 0x107c34806 in DPLL sat.c:260
    #31 0x107c34806 in DPLL sat.c:260
    #32 0x107c34806 in DPLL sat.c:260
    #33 0x107c34806 in DPLL sat.c:260
    #34 0x107c34806 in DPLL sat.c:260
    #35 0x107c34806 in DPLL sat.c:260
    #36 0x107c34806 in DPLL sat.c:260
    #37 0x107c34806 in DPLL sat.c:260
    #38 0x107c34806 in DPLL sat.c:260
    #39 0x107c34806 in DPLL sat.c:260
    #40 0x107c34806 in DPLL sat.c:260
    #41 0x107c34806 in DPLL sat.c:260
    #42 0x107c34806 in DPLL sat.c:260
    #43 0x107c34806 in DPLL sat.c:260
    #44 0x107c34806 in DPLL sat.c:260
    #45 0x107c34806 in DPLL sat.c:260
    #46 0x107c34806 in DPLL sat.c:260
    #47 0x107c34806 in DPLL sat.c:260
    #48 0x107c34806 in DPLL sat.c:260
    #49 0x107c34806 in DPLL sat.c:260
    #50 0x107c34806 in DPLL sat.c:260
    #51 0x107c34806 in DPLL sat.c:260
    #52 0x107c34806 in DPLL sat.c:260
    #53 0x107c34806 in DPLL sat.c:260
    #54 0x107c34806 in DPLL sat.c:260
    #55 0x107c34806 in DPLL sat.c:260
    #56 0x107c34806 in DPLL sat.c:260
    #57 0x107c34806 in DPLL sat.c:260
    #58 0x107c34806 in DPLL sat.c:260
    #59 0x107c34806 in DPLL sat.c:260
    #60 0x107c34806 in DPLL sat.c:260
    #61 0x107c34806 in DPLL sat.c:260
    #62 0x107c34806 in DPLL sat.c:260
    #63 0x107c34806 in DPLL sat.c:260
    #64 0x107c34806 in DPLL sat.c:260
    #65 0x107c34806 in DPLL sat.c:260
    #66 0x107c34806 in DPLL sat.c:260
    #67 0x107c34806 in DPLL sat.c:260
    #68 0x107c34806 in DPLL sat.c:260
    #69 0x107c34806 in DPLL sat.c:260
    #70 0x107c34806 in DPLL sat.c:260
    #71 0x107c34806 in DPLL sat.c:260
    #72 0x107c34806 in DPLL sat.c:260
    #73 0x107c34806 in DPLL sat.c:260
    #74 0x107c34806 in DPLL sat.c:260
    #75 0x107c34806 in DPLL sat.c:260
    #76 0x107c34806 in DPLL sat.c:260
    #77 0x107c34806 in DPLL sat.c:260
    #78 0x107c34806 in DPLL sat.c:260
    #79 0x107c34806 in DPLL sat.c:260
    #80 0x107c34806 in DPLL sat.c:260
    #81 0x107c34806 in DPLL sat.c:260
    #82 0x107c34806 in DPLL sat.c:260
    #83 0x107c34806 in DPLL sat.c:260
    #84 0x107c34806 in DPLL sat.c:260
    #85 0x107c34806 in DPLL sat.c:260
    #86 0x107c34806 in DPLL sat.c:260
    #87 0x107c34806 in DPLL sat.c:260
    #88 0x107c34806 in DPLL sat.c:260
    #89 0x107c34806 in DPLL sat.c:260
    #90 0x107c34806 in DPLL sat.c:260
    #91 0x107c34806 in DPLL sat.c:260
    #92 0x107c34806 in DPLL sat.c:260
    #93 0x107c34806 in DPLL sat.c:260
    #94 0x107c34806 in DPLL sat.c:260
    #95 0x107c34806 in DPLL sat.c:260
    #96 0x107c34806 in DPLL sat.c:260
    #97 0x107c34806 in DPLL sat.c:260
    #98 0x107c34806 in DPLL sat.c:260
    #99 0x107c34806 in DPLL sat.c:260
    #100 0x107c34806 in DPLL sat.c:260
    #101 0x107c34806 in DPLL sat.c:260
    #102 0x107c34806 in DPLL sat.c:260
    #103 0x107c34806 in DPLL sat.c:260
    #104 0x107c34806 in DPLL sat.c:260
    #105 0x107c34806 in DPLL sat.c:260
    #106 0x107c34806 in DPLL sat.c:260
    #107 0x107c34806 in DPLL sat.c:260
    #108 0x107c34806 in DPLL sat.c:260
    #109 0x107c34806 in DPLL sat.c:260
    #110 0x107c34806 in DPLL sat.c:260
    #111 0x107c34806 in DPLL sat.c:260
    #112 0x107c34806 in DPLL sat.c:260
    #113 0x107c34806 in DPLL sat.c:260
    #114 0x107c34806 in DPLL sat.c:260
    #115 0x107c34806 in DPLL sat.c:260
    #116 0x107c34806 in DPLL sat.c:260
    #117 0x107c34806 in DPLL sat.c:260
    #118 0x107c34806 in DPLL sat.c:260
    #119 0x107c34806 in DPLL sat.c:260
    #120 0x107c34806 in DPLL sat.c:260
    #121 0x107c34806 in DPLL sat.c:260
    #122 0x107c34806 in DPLL sat.c:260
    #123 0x107c34806 in DPLL sat.c:260
    #124 0x107c34806 in DPLL sat.c:260
    #125 0x107c34806 in DPLL sat.c:260
    #126 0x107c34806 in DPLL sat.c:260
    #127 0x107c34806 in DPLL sat.c:260
    #128 0x107c34806 in DPLL sat.c:260
    #129 0x107c34806 in DPLL sat.c:260
    #130 0x107c34806 in DPLL sat.c:260
    #131 0x107c34806 in DPLL sat.c:260
    #132 0x107c34806 in DPLL sat.c:260
    #133 0x107c34806 in DPLL sat.c:260
    #134 0x107c34806 in DPLL sat.c:260
    #135 0x107c34806 in DPLL sat.c:260
    #136 0x107c34806 in DPLL sat.c:260
    #137 0x107c34806 in DPLL sat.c:260
    #138 0x107c34806 in DPLL sat.c:260
    #139 0x107c34806 in DPLL sat.c:260
    #140 0x107c34806 in DPLL sat.c:260
    #141 0x107c34806 in DPLL sat.c:260
    #142 0x107c34806 in DPLL sat.c:260
    #143 0x107c34806 in DPLL sat.c:260
    #144 0x107c34806 in DPLL sat.c:260
    #145 0x107c34806 in DPLL sat.c:260
    #146 0x107c34806 in DPLL sat.c:260
    #147 0x107c34806 in DPLL sat.c:260
    #148 0x107c34806 in DPLL sat.c:260
    #149 0x107c34806 in DPLL sat.c:260
    #150 0x107c34806 in DPLL sat.c:260
    #151 0x107c34806 in DPLL sat.c:260
    #152 0x107c34806 in DPLL sat.c:260
    #153 0x107c34806 in DPLL sat.c:260
    #154 0x107c34806 in DPLL sat.c:260
    #155 0x107c34806 in DPLL sat.c:260
    #156 0x107c34806 in DPLL sat.c:260
    #157 0x107c34806 in DPLL sat.c:260
    #158 0x107c34806 in DPLL sat.c:260
    #159 0x107c34806 in DPLL sat.c:260
    #160 0x107c34806 in DPLL sat.c:260
    #161 0x107c34806 in DPLL sat.c:260
    #162 0x107c34806 in DPLL sat.c:260
    #163 0x107c34806 in DPLL sat.c:260
    #164 0x107c34806 in DPLL sat.c:260
    #165 0x107c34806 in DPLL sat.c:260
    #166 0x107c34806 in DPLL sat.c:260
    #167 0x107c34806 in DPLL sat.c:260
    #168 0x107c34806 in DPLL sat.c:260
    #169 0x107c34806 in DPLL sat.c:260
    #170 0x107c34806 in DPLL sat.c:260
    #171 0x107c34806 in DPLL sat.c:260
    #172 0x107c34806 in DPLL sat.c:260
    #173 0x107c34806 in DPLL sat.c:260
    #174 0x107c34806 in DPLL sat.c:260
    #175 0x107c34806 in DPLL sat.c:260
    #176 0x107c34806 in DPLL sat.c:260
    #177 0x107c34806 in DPLL sat.c:260
    #178 0x107c34806 in DPLL sat.c:260
    #179 0x107c34806 in DPLL sat.c:260
    #180 0x107c34806 in DPLL sat.c:260
    #181 0x107c34806 in DPLL sat.c:260
    #182 0x107c34806 in DPLL sat.c:260
    #183 0x107c34806 in DPLL sat.c:260
    #184 0x107c34806 in DPLL sat.c:260
    #185 0x107c34806 in DPLL sat.c:260
    #186 0x107c34806 in DPLL sat.c:260
    #187 0x107c34806 in DPLL sat.c:260
    #188 0x107c34806 in DPLL sat.c:260
    #189 0x107c34806 in DPLL sat.c:260
    #190 0x107c34806 in DPLL sat.c:260
    #191 0x107c34806 in DPLL sat.c:260
    #192 0x107c34806 in DPLL sat.c:260
    #193 0x107c34806 in DPLL sat.c:260
    #194 0x107c34806 in DPLL sat.c:260
    #195 0x107c34806 in DPLL sat.c:260
    #196 0x107c34806 in DPLL sat.c:260
    #197 0x107c34806 in DPLL sat.c:260
    #198 0x107c34806 in DPLL sat.c:260
    #199 0x107c34806 in DPLL sat.c:260
    #200 0x107c34806 in DPLL sat.c:260
    #201 0x107c34806 in DPLL sat.c:260
    #202 0x107c34806 in DPLL sat.c:260
    #203 0x107c34806 in DPLL sat.c:260
    #204 0x107c34806 in DPLL sat.c:260
    #205 0x107c34806 in DPLL sat.c:260
    #206 0x107c34806 in DPLL sat.c:260
    #207 0x107c34806 in DPLL sat.c:260
    #208 0x107c34806 in DPLL sat.c:260
    #209 0x107c34806 in DPLL sat.c:260
    #210 0x107c34806 in DPLL sat.c:260
    #211 0x107c34806 in DPLL sat.c:260
    #212 0x107c34806 in DPLL sat.c:260
    #213 0x107c34806 in DPLL sat.c:260
    #214 0x107c34806 in DPLL sat.c:260
    #215 0x107c34806 in DPLL sat.c:260
    #216 0x107c34806 in DPLL sat.c:260
    #217 0x107c34806 in DPLL sat.c:260
    #218 0x107c34806 in DPLL sat.c:260
    #219 0x107c34806 in DPLL sat.c:260
    #220 0x107c34806 in DPLL sat.c:260
    #221 0x107c34806 in DPLL sat.c:260
    #222 0x107c34806 in DPLL sat.c:260
    #223 0x107c34806 in DPLL sat.c:260
    #224 0x107c34806 in DPLL sat.c:260
    #225 0x107c34806 in DPLL sat.c:260
    #226 0x107c34806 in DPLL sat.c:260
    #227 0x107c34806 in DPLL sat.c:260
    #228 0x107c34806 in DPLL sat.c:260
    #229 0x107c34806 in DPLL sat.c:260
    #230 0x107c34806 in DPLL sat.c:260
    #231 0x107c34806 in DPLL sat.c:260
    #232 0x107c34806 in DPLL sat.c:260
    #233 0x107c34806 in DPLL sat.c:260
    #234 0x107c34806 in DPLL sat.c:260
    #235 0x107c34806 in DPLL sat.c:260
    #236 0x107c34806 in DPLL sat.c:260
    #237 0x107c34806 in DPLL sat.c:260
    #238 0x107c34806 in DPLL sat.c:260
    #239 0x107c34806 in DPLL sat.c:260
    #240 0x107c34806 in DPLL sat.c:260
    #241 0x107c34806 in DPLL sat.c:260
    #242 0x107c34806 in DPLL sat.c:260
    #243 0x107c34806 in DPLL sat.c:260
    #244 0x107c34806 in DPLL sat.c:260
    #245 0x107c34806 in DPLL sat.c:260
    #246 0x107c34806 in DPLL sat.c:260
    #247 0x107c34806 in DPLL sat.c:260
    #248 0x107c34806 in DPLL sat.c:260
    #249 0x107c34806 in DPLL sat.c:260
    #250 0x107c34806 in DPLL sat.c:260
    #251 0x107c34806 in DPLL sat.c:260
    #252 0x107c34806 in DPLL sat.c:260
    #253 0x107c34806 in DPLL sat.c:260
    #254 0x107c34806 in DPLL sat.c:260
    #255 0x107c34806 in DPLL sat.c:260

==23390==Register values:
rax = 0x000060400001002c  rbx = 0x00007ffee7ee5060  rcx = 0x0000100000000000  rdx = 0x00007ffee7ee4f01  
rdi = 0x000000000000009c  rsi = 0x0000000000000001  rbp = 0x00007ffee7ee5280  rsp = 0x00007ffee7ee4fe0  
 r8 = 0x0000000000000001   r9 = 0x0000000000000008  r10 = 0x0000000000000030  r11 = 0xffff80021fd5f490  
r12 = 0x0000000000000000  r13 = 0x0000000000000000  r14 = 0x0000000000000000  r15 = 0x0000000000000000  
AddressSanitizer can not provide additional info.
SUMMARY: AddressSanitizer: BUS sat.c:149 in assign
==23390==ABORTING
./runsat.sh: line 23: 23390 Abort trap: 6           "${SCRIPT_DIR}/sat" "$1"
