input file taken from /Users/salimalwahaibi/Desktop/imperial/sem 2/software relibelity/software-reliability-/inputs/solver3/generative_fuzzing/804.cnf the error found is:
=================================================================
==24734==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x603000001b90 at pc 0x000101787e63 bp 0x7ffeee47ef90 sp 0x7ffeee47ef88
WRITE of size 4 at 0x603000001b90 thread T0
    #0 0x101787e62 in main sat.c:98
    #1 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

0x603000001b90 is located 0 bytes to the right of 32-byte region [0x603000001b70,0x603000001b90)
allocated by thread T0 here:
    #0 0x1017e8400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x101787519 in main sat.c:83
    #2 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

SUMMARY: AddressSanitizer: heap-buffer-overflow sat.c:98 in main
Shadow bytes around the buggy address:
  0x1c0600000320: 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00 06 fa
  0x1c0600000330: fa fa 00 00 00 fa fa fa 00 00 00 fa fa fa 00 00
  0x1c0600000340: 00 00 fa fa 00 00 00 00 fa fa 00 00 00 00 fa fa
  0x1c0600000350: 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00 00 00
  0x1c0600000360: fa fa 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00
=>0x1c0600000370: 00 00[fa]fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c0600000380: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c0600000390: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c06000003a0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c06000003b0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c06000003c0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
=================================================================
==24734==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x603000001b90 at pc 0x000101786615 bp 0x7ffeee47e6d0 sp 0x7ffeee47e6c8
READ of size 4 at 0x603000001b90 thread T0
    #0 0x101786614 in abscmpfunc sat.c:39
    #1 0x1017e1e79 in wrap_qsort+0x79 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x3de79)
    #2 0x1017893b4 in main sat.c:122
    #3 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

0x603000001b90 is located 0 bytes to the right of 32-byte region [0x603000001b70,0x603000001b90)
allocated by thread T0 here:
    #0 0x1017e8400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x101787519 in main sat.c:83
    #2 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

SUMMARY: AddressSanitizer: heap-buffer-overflow sat.c:39 in abscmpfunc
Shadow bytes around the buggy address:
  0x1c0600000320: 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00 06 fa
  0x1c0600000330: fa fa 00 00 00 fa fa fa 00 00 00 fa fa fa 00 00
  0x1c0600000340: 00 00 fa fa 00 00 00 00 fa fa 00 00 00 00 fa fa
  0x1c0600000350: 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00 00 00
  0x1c0600000360: fa fa 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00
=>0x1c0600000370: 00 00[fa]fa 00 00 00 00 fa fa fd fd fd fd fa fa
  0x1c0600000380: 00 00 00 00 fa fa 00 00 00 00 fa fa fd fd fd fd
  0x1c0600000390: fa fa fd fd fd fd fa fa fd fd fd fd fa fa 00 00
  0x1c06000003a0: 00 00 fa fa 00 00 00 00 fa fa 00 00 00 00 fa fa
  0x1c06000003b0: 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00 00 00
  0x1c06000003c0: fa fa 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
=================================================================
==24734==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x603000001b90 at pc 0x00010178657a bp 0x7ffeee47e610 sp 0x7ffeee47e608
READ of size 4 at 0x603000001b90 thread T0
    #0 0x101786579 in abscmpfunc sat.c:39
    #1 0x7fff2044730b in _qsort+0x3f0 (libsystem_c.dylib:x86_64+0x5d30b)
    #2 0x1017e1ee9 in wrap_qsort+0xe9 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x3dee9)
    #3 0x1017893b4 in main sat.c:122
    #4 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

0x603000001b90 is located 0 bytes to the right of 32-byte region [0x603000001b70,0x603000001b90)
allocated by thread T0 here:
    #0 0x1017e8400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x101787519 in main sat.c:83
    #2 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

SUMMARY: AddressSanitizer: heap-buffer-overflow sat.c:39 in abscmpfunc
Shadow bytes around the buggy address:
  0x1c0600000320: 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00 06 fa
  0x1c0600000330: fa fa 00 00 00 fa fa fa 00 00 00 fa fa fa 00 00
  0x1c0600000340: 00 00 fa fa 00 00 00 00 fa fa 00 00 00 00 fa fa
  0x1c0600000350: 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00 00 00
  0x1c0600000360: fa fa 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00
=>0x1c0600000370: 00 00[fa]fa 00 00 00 00 fa fa fd fd fd fd fa fa
  0x1c0600000380: 00 00 00 00 fa fa 00 00 00 00 fa fa fd fd fd fd
  0x1c0600000390: fa fa fd fd fd fd fa fa fd fd fd fd fa fa 00 00
  0x1c06000003a0: 00 00 fa fa 00 00 00 00 fa fa 00 00 00 00 fa fa
  0x1c06000003b0: 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00 00 00
  0x1c06000003c0: fa fa 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
=================================================================
==24734==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x603000001b90 at pc 0x0001017e2058 bp 0x7ffeee47ef90 sp 0x7ffeee47e738
WRITE of size 36 at 0x603000001b90 thread T0
    #0 0x1017e2057 in wrap_qsort+0x257 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x3e057)
    #1 0x1017893b4 in main sat.c:122
    #2 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

0x603000001b90 is located 0 bytes to the right of 32-byte region [0x603000001b70,0x603000001b90)
allocated by thread T0 here:
    #0 0x1017e8400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x101787519 in main sat.c:83
    #2 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

SUMMARY: AddressSanitizer: heap-buffer-overflow (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x3e057) in wrap_qsort+0x257
Shadow bytes around the buggy address:
  0x1c0600000320: 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00 06 fa
  0x1c0600000330: fa fa 00 00 00 fa fa fa 00 00 00 fa fa fa 00 00
  0x1c0600000340: 00 00 fa fa 00 00 00 00 fa fa 00 00 00 00 fa fa
  0x1c0600000350: 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00 00 00
  0x1c0600000360: fa fa 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00
=>0x1c0600000370: 00 00[fa]fa 00 00 00 00 fa fa fd fd fd fd fa fa
  0x1c0600000380: 00 00 00 00 fa fa 00 00 00 00 fa fa fd fd fd fd
  0x1c0600000390: fa fa fd fd fd fd fa fa fd fd fd fd fa fa 00 00
  0x1c06000003a0: 00 00 fa fa 00 00 00 00 fa fa 00 00 00 00 fa fa
  0x1c06000003b0: 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00 00 00
  0x1c06000003c0: fa fa 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
=================================================================
==24734==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x603000001d10 at pc 0x000101791db2 bp 0x7ffeee47e550 sp 0x7ffeee47e548
READ of size 4 at 0x603000001d10 thread T0
    #0 0x101791db1 in binary_search sat.c:334
    #1 0x10178bfb8 in remove_lit sat.c:315
    #2 0x10178ba04 in assign sat.c:159
    #3 0x10178a03b in DPLL sat.c:239
    #4 0x10178950a in main sat.c:125
    #5 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

0x603000001d10 is located 0 bytes to the right of 32-byte region [0x603000001cf0,0x603000001d10)
allocated by thread T0 here:
    #0 0x1017e8400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x101787519 in main sat.c:83
    #2 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

SUMMARY: AddressSanitizer: heap-buffer-overflow sat.c:334 in binary_search
Shadow bytes around the buggy address:
  0x1c0600000350: 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00 00 00
  0x1c0600000360: fa fa 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00
  0x1c0600000370: 00 00 fa fa 00 00 00 00 fa fa fd fd fd fd fa fa
  0x1c0600000380: 00 00 00 00 fa fa 00 00 00 00 fa fa fd fd fd fd
  0x1c0600000390: fa fa fd fd fd fd fa fa fd fd fd fd fa fa 00 00
=>0x1c06000003a0: 00 00[fa]fa 00 00 00 00 fa fa 00 00 00 00 fa fa
  0x1c06000003b0: 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00 00 00
  0x1c06000003c0: fa fa 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00
  0x1c06000003d0: 00 00 fa fa 00 00 00 00 fa fa 00 00 00 00 fa fa
  0x1c06000003e0: 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00 00 00
  0x1c06000003f0: fa fa 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
=================================================================
==24734==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x603000001d10 at pc 0x000101791eee bp 0x7ffeee47e550 sp 0x7ffeee47e548
READ of size 4 at 0x603000001d10 thread T0
    #0 0x101791eed in binary_search sat.c:337
    #1 0x10178bfb8 in remove_lit sat.c:315
    #2 0x10178ba04 in assign sat.c:159
    #3 0x10178a03b in DPLL sat.c:239
    #4 0x10178950a in main sat.c:125
    #5 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

0x603000001d10 is located 0 bytes to the right of 32-byte region [0x603000001cf0,0x603000001d10)
allocated by thread T0 here:
    #0 0x1017e8400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x101787519 in main sat.c:83
    #2 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

SUMMARY: AddressSanitizer: heap-buffer-overflow sat.c:337 in binary_search
Shadow bytes around the buggy address:
  0x1c0600000350: 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00 00 00
  0x1c0600000360: fa fa 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00
  0x1c0600000370: 00 00 fa fa 00 00 00 00 fa fa fd fd fd fd fa fa
  0x1c0600000380: 00 00 00 00 fa fa 00 00 00 00 fa fa fd fd fd fd
  0x1c0600000390: fa fa fd fd fd fd fa fa fd fd fd fd fa fa 00 00
=>0x1c06000003a0: 00 00[fa]fa 00 00 00 00 fa fa 00 00 00 00 fa fa
  0x1c06000003b0: 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00 00 00
  0x1c06000003c0: fa fa 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00
  0x1c06000003d0: 00 00 fa fa 00 00 00 00 fa fa 00 00 00 00 fa fa
  0x1c06000003e0: 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00 00 00
  0x1c06000003f0: fa fa 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
=================================================================
==24734==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x603000001d10 at pc 0x00010178c221 bp 0x7ffeee47e5f0 sp 0x7ffeee47e5e8
READ of size 4 at 0x603000001d10 thread T0
    #0 0x10178c220 in remove_lit sat.c:319
    #1 0x10178ba04 in assign sat.c:159
    #2 0x10178a03b in DPLL sat.c:239
    #3 0x10178950a in main sat.c:125
    #4 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

0x603000001d10 is located 0 bytes to the right of 32-byte region [0x603000001cf0,0x603000001d10)
allocated by thread T0 here:
    #0 0x1017e8400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x101787519 in main sat.c:83
    #2 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

SUMMARY: AddressSanitizer: heap-buffer-overflow sat.c:319 in remove_lit
Shadow bytes around the buggy address:
  0x1c0600000350: 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00 00 00
  0x1c0600000360: fa fa 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00
  0x1c0600000370: 00 00 fa fa 00 00 00 00 fa fa fd fd fd fd fa fa
  0x1c0600000380: 00 00 00 00 fa fa 00 00 00 00 fa fa fd fd fd fd
  0x1c0600000390: fa fa fd fd fd fd fa fa fd fd fd fd fa fa 00 00
=>0x1c06000003a0: 00 00[fa]fa 00 00 00 00 fa fa 00 00 00 00 fa fa
  0x1c06000003b0: 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00 00 00
  0x1c06000003c0: fa fa 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00
  0x1c06000003d0: 00 00 fa fa 00 00 00 00 fa fa 00 00 00 00 fa fa
  0x1c06000003e0: 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00 00 00
  0x1c06000003f0: fa fa 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
=================================================================
==24734==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x603000001d10 at pc 0x00010178c38c bp 0x7ffeee47e5f0 sp 0x7ffeee47e5e8
WRITE of size 4 at 0x603000001d10 thread T0
    #0 0x10178c38b in remove_lit sat.c:319
    #1 0x10178ba04 in assign sat.c:159
    #2 0x10178a03b in DPLL sat.c:239
    #3 0x10178950a in main sat.c:125
    #4 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

0x603000001d10 is located 0 bytes to the right of 32-byte region [0x603000001cf0,0x603000001d10)
allocated by thread T0 here:
    #0 0x1017e8400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x101787519 in main sat.c:83
    #2 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

SUMMARY: AddressSanitizer: heap-buffer-overflow sat.c:319 in remove_lit
Shadow bytes around the buggy address:
  0x1c0600000350: 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00 00 00
  0x1c0600000360: fa fa 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00
  0x1c0600000370: 00 00 fa fa 00 00 00 00 fa fa fd fd fd fd fa fa
  0x1c0600000380: 00 00 00 00 fa fa 00 00 00 00 fa fa fd fd fd fd
  0x1c0600000390: fa fa fd fd fd fd fa fa fd fd fd fd fa fa 00 00
=>0x1c06000003a0: 00 00[fa]fa 00 00 00 00 fa fa 00 00 00 00 fa fa
  0x1c06000003b0: 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00 00 00
  0x1c06000003c0: fa fa 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00
  0x1c06000003d0: 00 00 fa fa 00 00 00 00 fa fa 00 00 00 00 fa fa
  0x1c06000003e0: 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00 00 00
  0x1c06000003f0: fa fa 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
sat.c:334:13: runtime error: load of misaligned address 0x603000001da1 for type 'int', which requires 4 byte alignment
0x603000001da1: note: pointer points here
 ff ff ff  fb ff ff ff fa ff ff ff  f9 ff ff ff f9 ff ff ff  02 00 00 00 04 00 00 00  05 00 00 00 06
              ^ 
SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior sat.c:334:13 in 
sat.c:337:13: runtime error: load of misaligned address 0x603000001da1 for type 'int', which requires 4 byte alignment
0x603000001da1: note: pointer points here
 ff ff ff  fb ff ff ff fa ff ff ff  f9 ff ff ff f9 ff ff ff  02 00 00 00 04 00 00 00  05 00 00 00 06
              ^ 
SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior sat.c:337:13 in 
sat.c:319:21: runtime error: load of misaligned address 0x603000001d89 for type 'int', which requires 4 byte alignment
0x603000001d89: note: pointer points here
 ff ff ff  ff ff ff ff 01 00 00 00  fe ff ff ff fe ff ff ff  fd ff ff ff fc ff ff ff  fb ff ff ff fa
              ^ 
SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior sat.c:319:21 in 
sat.c:319:5: runtime error: store to misaligned address 0x603000001d85 for type 'int', which requires 4 byte alignment
0x603000001d85: note: pointer points here
 00 00 00 ff ff ff ff  ff ff ff ff 01 00 00 00  fe ff ff ff fe ff ff ff  fd ff ff ff fc ff ff ff  fb
             ^ 
SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior sat.c:319:5 in 
=================================================================
==24734==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000001331 at pc 0x00010178af22 bp 0x7ffeee47e3f0 sp 0x7ffeee47e3e8
WRITE of size 1 at 0x602000001331 thread T0
    #0 0x10178af21 in assign sat.c:146
    #1 0x10178a735 in DPLL sat.c:260
    #2 0x10178a806 in DPLL sat.c:260
    #3 0x10178950a in main sat.c:125
    #4 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

Address 0x602000001331 is a wild pointer.
SUMMARY: AddressSanitizer: heap-buffer-overflow sat.c:146 in assign
Shadow bytes around the buggy address:
  0x1c0400000210: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c0400000220: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c0400000230: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c0400000240: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c0400000250: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
=>0x1c0400000260: fa fa fa fa fa fa[fa]fa fa fa fa fa fa fa fa fa
  0x1c0400000270: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c0400000280: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c0400000290: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c04000002a0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c04000002b0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
=================================================================
==24734==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x606000009428 at pc 0x00010178b0b0 bp 0x7ffeee47e3f0 sp 0x7ffeee47e3e8
READ of size 8 at 0x606000009428 thread T0
    #0 0x10178b0af in assign sat.c:148
    #1 0x10178a735 in DPLL sat.c:260
    #2 0x10178a806 in DPLL sat.c:260
    #3 0x10178950a in main sat.c:125
    #4 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

Address 0x606000009428 is a wild pointer.
SUMMARY: AddressSanitizer: heap-buffer-overflow sat.c:148 in assign
Shadow bytes around the buggy address:
  0x1c0c00001230: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c0c00001240: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c0c00001250: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c0c00001260: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c0c00001270: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
=>0x1c0c00001280: fa fa fa fa fa[fa]fa fa fa fa fa fa fa fa fa fa
  0x1c0c00001290: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c0c000012a0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c0c000012b0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c0c000012c0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c0c000012d0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
=================================================================
==24734==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x603000007954 at pc 0x00010178b25f bp 0x7ffeee47e3f0 sp 0x7ffeee47e3e8
READ of size 4 at 0x603000007954 thread T0
    #0 0x10178b25e in assign sat.c:149
    #1 0x10178a735 in DPLL sat.c:260
    #2 0x10178a806 in DPLL sat.c:260
    #3 0x10178950a in main sat.c:125
    #4 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

Address 0x603000007954 is a wild pointer.
SUMMARY: AddressSanitizer: heap-buffer-overflow sat.c:149 in assign
Shadow bytes around the buggy address:
  0x1c0600000ed0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c0600000ee0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c0600000ef0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c0600000f00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c0600000f10: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
=>0x1c0600000f20: fa fa fa fa fa fa fa fa fa fa[fa]fa fa fa fa fa
  0x1c0600000f30: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c0600000f40: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c0600000f50: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c0600000f60: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c0600000f70: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
AddressSanitizer:DEADLYSIGNAL
=================================================================
==24734==ERROR: AddressSanitizer: BUS on unknown address (pc 0x00010178b0be bp 0x7ffeee42faa0 sp 0x7ffeee42f800 T0)
==24734==The signal is caused by a READ memory access.
==24734==Hint: this fault was caused by a dereference of a high value address (see register values below).  Disassemble the provided pc to learn which register was used.
    #0 0x10178b0be in assign sat.c:148
    #1 0x10178a735 in DPLL sat.c:260
    #2 0x10178a806 in DPLL sat.c:260
    #3 0x10178a806 in DPLL sat.c:260
    #4 0x10178a806 in DPLL sat.c:260
    #5 0x10178a806 in DPLL sat.c:260
    #6 0x10178a806 in DPLL sat.c:260
    #7 0x10178a806 in DPLL sat.c:260
    #8 0x10178a806 in DPLL sat.c:260
    #9 0x10178a806 in DPLL sat.c:260
    #10 0x10178a806 in DPLL sat.c:260
    #11 0x10178a806 in DPLL sat.c:260
    #12 0x10178a806 in DPLL sat.c:260
    #13 0x10178a806 in DPLL sat.c:260
    #14 0x10178a806 in DPLL sat.c:260
    #15 0x10178a806 in DPLL sat.c:260
    #16 0x10178a806 in DPLL sat.c:260
    #17 0x10178a806 in DPLL sat.c:260
    #18 0x10178a806 in DPLL sat.c:260
    #19 0x10178a806 in DPLL sat.c:260
    #20 0x10178a806 in DPLL sat.c:260
    #21 0x10178a806 in DPLL sat.c:260
    #22 0x10178a806 in DPLL sat.c:260
    #23 0x10178a806 in DPLL sat.c:260
    #24 0x10178a806 in DPLL sat.c:260
    #25 0x10178a806 in DPLL sat.c:260
    #26 0x10178a806 in DPLL sat.c:260
    #27 0x10178a806 in DPLL sat.c:260
    #28 0x10178a806 in DPLL sat.c:260
    #29 0x10178a806 in DPLL sat.c:260
    #30 0x10178a806 in DPLL sat.c:260
    #31 0x10178a806 in DPLL sat.c:260
    #32 0x10178a806 in DPLL sat.c:260
    #33 0x10178a806 in DPLL sat.c:260
    #34 0x10178a806 in DPLL sat.c:260
    #35 0x10178a806 in DPLL sat.c:260
    #36 0x10178a806 in DPLL sat.c:260
    #37 0x10178a806 in DPLL sat.c:260
    #38 0x10178a806 in DPLL sat.c:260
    #39 0x10178a806 in DPLL sat.c:260
    #40 0x10178a806 in DPLL sat.c:260
    #41 0x10178a806 in DPLL sat.c:260
    #42 0x10178a806 in DPLL sat.c:260
    #43 0x10178a806 in DPLL sat.c:260
    #44 0x10178a806 in DPLL sat.c:260
    #45 0x10178a806 in DPLL sat.c:260
    #46 0x10178a806 in DPLL sat.c:260
    #47 0x10178a806 in DPLL sat.c:260
    #48 0x10178a806 in DPLL sat.c:260
    #49 0x10178a806 in DPLL sat.c:260
    #50 0x10178a806 in DPLL sat.c:260
    #51 0x10178a806 in DPLL sat.c:260
    #52 0x10178a806 in DPLL sat.c:260
    #53 0x10178a806 in DPLL sat.c:260
    #54 0x10178a806 in DPLL sat.c:260
    #55 0x10178a806 in DPLL sat.c:260
    #56 0x10178a806 in DPLL sat.c:260
    #57 0x10178a806 in DPLL sat.c:260
    #58 0x10178a806 in DPLL sat.c:260
    #59 0x10178a806 in DPLL sat.c:260
    #60 0x10178a806 in DPLL sat.c:260
    #61 0x10178a806 in DPLL sat.c:260
    #62 0x10178a806 in DPLL sat.c:260
    #63 0x10178a806 in DPLL sat.c:260
    #64 0x10178a806 in DPLL sat.c:260
    #65 0x10178a806 in DPLL sat.c:260
    #66 0x10178a806 in DPLL sat.c:260
    #67 0x10178a806 in DPLL sat.c:260
    #68 0x10178a806 in DPLL sat.c:260
    #69 0x10178a806 in DPLL sat.c:260
    #70 0x10178a806 in DPLL sat.c:260
    #71 0x10178a806 in DPLL sat.c:260
    #72 0x10178a806 in DPLL sat.c:260
    #73 0x10178a806 in DPLL sat.c:260
    #74 0x10178a806 in DPLL sat.c:260
    #75 0x10178a806 in DPLL sat.c:260
    #76 0x10178a806 in DPLL sat.c:260
    #77 0x10178a806 in DPLL sat.c:260
    #78 0x10178a806 in DPLL sat.c:260
    #79 0x10178a806 in DPLL sat.c:260
    #80 0x10178a806 in DPLL sat.c:260
    #81 0x10178a806 in DPLL sat.c:260
    #82 0x10178a806 in DPLL sat.c:260
    #83 0x10178a806 in DPLL sat.c:260
    #84 0x10178a806 in DPLL sat.c:260
    #85 0x10178a806 in DPLL sat.c:260
    #86 0x10178a806 in DPLL sat.c:260
    #87 0x10178a806 in DPLL sat.c:260
    #88 0x10178a806 in DPLL sat.c:260
    #89 0x10178a806 in DPLL sat.c:260
    #90 0x10178a806 in DPLL sat.c:260
    #91 0x10178a806 in DPLL sat.c:260
    #92 0x10178a806 in DPLL sat.c:260
    #93 0x10178a806 in DPLL sat.c:260
    #94 0x10178a806 in DPLL sat.c:260
    #95 0x10178a806 in DPLL sat.c:260
    #96 0x10178a806 in DPLL sat.c:260
    #97 0x10178a806 in DPLL sat.c:260
    #98 0x10178a806 in DPLL sat.c:260
    #99 0x10178a806 in DPLL sat.c:260
    #100 0x10178a806 in DPLL sat.c:260
    #101 0x10178a806 in DPLL sat.c:260
    #102 0x10178a806 in DPLL sat.c:260
    #103 0x10178a806 in DPLL sat.c:260
    #104 0x10178a806 in DPLL sat.c:260
    #105 0x10178a806 in DPLL sat.c:260
    #106 0x10178a806 in DPLL sat.c:260
    #107 0x10178a806 in DPLL sat.c:260
    #108 0x10178a806 in DPLL sat.c:260
    #109 0x10178a806 in DPLL sat.c:260
    #110 0x10178a806 in DPLL sat.c:260
    #111 0x10178a806 in DPLL sat.c:260
    #112 0x10178a806 in DPLL sat.c:260
    #113 0x10178a806 in DPLL sat.c:260
    #114 0x10178a806 in DPLL sat.c:260
    #115 0x10178a806 in DPLL sat.c:260
    #116 0x10178a806 in DPLL sat.c:260
    #117 0x10178a806 in DPLL sat.c:260
    #118 0x10178a806 in DPLL sat.c:260
    #119 0x10178a806 in DPLL sat.c:260
    #120 0x10178a806 in DPLL sat.c:260
    #121 0x10178a806 in DPLL sat.c:260
    #122 0x10178a806 in DPLL sat.c:260
    #123 0x10178a806 in DPLL sat.c:260
    #124 0x10178a806 in DPLL sat.c:260
    #125 0x10178a806 in DPLL sat.c:260
    #126 0x10178a806 in DPLL sat.c:260
    #127 0x10178a806 in DPLL sat.c:260
    #128 0x10178a806 in DPLL sat.c:260
    #129 0x10178a806 in DPLL sat.c:260
    #130 0x10178a806 in DPLL sat.c:260
    #131 0x10178a806 in DPLL sat.c:260
    #132 0x10178a806 in DPLL sat.c:260
    #133 0x10178a806 in DPLL sat.c:260
    #134 0x10178a806 in DPLL sat.c:260
    #135 0x10178a806 in DPLL sat.c:260
    #136 0x10178a806 in DPLL sat.c:260
    #137 0x10178a806 in DPLL sat.c:260
    #138 0x10178a806 in DPLL sat.c:260
    #139 0x10178a806 in DPLL sat.c:260
    #140 0x10178a806 in DPLL sat.c:260
    #141 0x10178a806 in DPLL sat.c:260
    #142 0x10178a806 in DPLL sat.c:260
    #143 0x10178a806 in DPLL sat.c:260
    #144 0x10178a806 in DPLL sat.c:260
    #145 0x10178a806 in DPLL sat.c:260
    #146 0x10178a806 in DPLL sat.c:260
    #147 0x10178a806 in DPLL sat.c:260
    #148 0x10178a806 in DPLL sat.c:260
    #149 0x10178a806 in DPLL sat.c:260
    #150 0x10178a806 in DPLL sat.c:260
    #151 0x10178a806 in DPLL sat.c:260
    #152 0x10178a806 in DPLL sat.c:260
    #153 0x10178a806 in DPLL sat.c:260
    #154 0x10178a806 in DPLL sat.c:260
    #155 0x10178a806 in DPLL sat.c:260
    #156 0x10178a806 in DPLL sat.c:260
    #157 0x10178a806 in DPLL sat.c:260
    #158 0x10178a806 in DPLL sat.c:260
    #159 0x10178a806 in DPLL sat.c:260
    #160 0x10178a806 in DPLL sat.c:260
    #161 0x10178a806 in DPLL sat.c:260
    #162 0x10178a806 in DPLL sat.c:260
    #163 0x10178a806 in DPLL sat.c:260
    #164 0x10178a806 in DPLL sat.c:260
    #165 0x10178a806 in DPLL sat.c:260
    #166 0x10178a806 in DPLL sat.c:260
    #167 0x10178a806 in DPLL sat.c:260
    #168 0x10178a806 in DPLL sat.c:260
    #169 0x10178a806 in DPLL sat.c:260
    #170 0x10178a806 in DPLL sat.c:260
    #171 0x10178a806 in DPLL sat.c:260
    #172 0x10178a806 in DPLL sat.c:260
    #173 0x10178a806 in DPLL sat.c:260
    #174 0x10178a806 in DPLL sat.c:260
    #175 0x10178a806 in DPLL sat.c:260
    #176 0x10178a806 in DPLL sat.c:260
    #177 0x10178a806 in DPLL sat.c:260
    #178 0x10178a806 in DPLL sat.c:260
    #179 0x10178a806 in DPLL sat.c:260
    #180 0x10178a806 in DPLL sat.c:260
    #181 0x10178a806 in DPLL sat.c:260
    #182 0x10178a806 in DPLL sat.c:260
    #183 0x10178a806 in DPLL sat.c:260
    #184 0x10178a806 in DPLL sat.c:260
    #185 0x10178a806 in DPLL sat.c:260
    #186 0x10178a806 in DPLL sat.c:260
    #187 0x10178a806 in DPLL sat.c:260
    #188 0x10178a806 in DPLL sat.c:260
    #189 0x10178a806 in DPLL sat.c:260
    #190 0x10178a806 in DPLL sat.c:260
    #191 0x10178a806 in DPLL sat.c:260
    #192 0x10178a806 in DPLL sat.c:260
    #193 0x10178a806 in DPLL sat.c:260
    #194 0x10178a806 in DPLL sat.c:260
    #195 0x10178a806 in DPLL sat.c:260
    #196 0x10178a806 in DPLL sat.c:260
    #197 0x10178a806 in DPLL sat.c:260
    #198 0x10178a806 in DPLL sat.c:260
    #199 0x10178a806 in DPLL sat.c:260
    #200 0x10178a806 in DPLL sat.c:260
    #201 0x10178a806 in DPLL sat.c:260
    #202 0x10178a806 in DPLL sat.c:260
    #203 0x10178a806 in DPLL sat.c:260
    #204 0x10178a806 in DPLL sat.c:260
    #205 0x10178a806 in DPLL sat.c:260
    #206 0x10178a806 in DPLL sat.c:260
    #207 0x10178a806 in DPLL sat.c:260
    #208 0x10178a806 in DPLL sat.c:260
    #209 0x10178a806 in DPLL sat.c:260
    #210 0x10178a806 in DPLL sat.c:260
    #211 0x10178a806 in DPLL sat.c:260
    #212 0x10178a806 in DPLL sat.c:260
    #213 0x10178a806 in DPLL sat.c:260
    #214 0x10178a806 in DPLL sat.c:260
    #215 0x10178a806 in DPLL sat.c:260
    #216 0x10178a806 in DPLL sat.c:260
    #217 0x10178a806 in DPLL sat.c:260
    #218 0x10178a806 in DPLL sat.c:260
    #219 0x10178a806 in DPLL sat.c:260
    #220 0x10178a806 in DPLL sat.c:260
    #221 0x10178a806 in DPLL sat.c:260
    #222 0x10178a806 in DPLL sat.c:260
    #223 0x10178a806 in DPLL sat.c:260
    #224 0x10178a806 in DPLL sat.c:260
    #225 0x10178a806 in DPLL sat.c:260
    #226 0x10178a806 in DPLL sat.c:260
    #227 0x10178a806 in DPLL sat.c:260
    #228 0x10178a806 in DPLL sat.c:260
    #229 0x10178a806 in DPLL sat.c:260
    #230 0x10178a806 in DPLL sat.c:260
    #231 0x10178a806 in DPLL sat.c:260
    #232 0x10178a806 in DPLL sat.c:260
    #233 0x10178a806 in DPLL sat.c:260
    #234 0x10178a806 in DPLL sat.c:260
    #235 0x10178a806 in DPLL sat.c:260
    #236 0x10178a806 in DPLL sat.c:260
    #237 0x10178a806 in DPLL sat.c:260
    #238 0x10178a806 in DPLL sat.c:260
    #239 0x10178a806 in DPLL sat.c:260
    #240 0x10178a806 in DPLL sat.c:260
    #241 0x10178a806 in DPLL sat.c:260
    #242 0x10178a806 in DPLL sat.c:260
    #243 0x10178a806 in DPLL sat.c:260
    #244 0x10178a806 in DPLL sat.c:260
    #245 0x10178a806 in DPLL sat.c:260
    #246 0x10178a806 in DPLL sat.c:260
    #247 0x10178a806 in DPLL sat.c:260
    #248 0x10178a806 in DPLL sat.c:260
    #249 0x10178a806 in DPLL sat.c:260
    #250 0x10178a806 in DPLL sat.c:260
    #251 0x10178a806 in DPLL sat.c:260
    #252 0x10178a806 in DPLL sat.c:260
    #253 0x10178a806 in DPLL sat.c:260
    #254 0x10178a806 in DPLL sat.c:260
    #255 0x10178a806 in DPLL sat.c:260

==24734==Register values:
rax = 0x00007ffeee42f820  rbx = 0x00007ffeee42f880  rcx = 0x0000606000010028  rdx = 0x00007ffeee42f701  
rdi = 0x0000000000008808  rsi = 0x0000000000000001  rbp = 0x00007ffeee42faa0  rsp = 0x00007ffeee42f800  
 r8 = 0x0000000000000001   r9 = 0x0000000000000001  r10 = 0x0000000000000030  r11 = 0xffff80021336ac70  
r12 = 0x0000000000000000  r13 = 0x0000000000000000  r14 = 0x0000000000000000  r15 = 0x0000000000000000  
AddressSanitizer can not provide additional info.
SUMMARY: AddressSanitizer: BUS sat.c:148 in assign
==24734==ABORTING
./runsat.sh: line 23: 24734 Abort trap: 6           "${SCRIPT_DIR}/sat" "$1"
