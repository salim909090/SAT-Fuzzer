input file taken from /Users/salimalwahaibi/Desktop/imperial/sem 2/software relibelity/software-reliability-/inputs/solver3/generative_fuzzing/556.cnf the error found is:
=================================================================
==18202==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60f0000003c0 at pc 0x00010cedde63 bp 0x7ffee2d28f90 sp 0x7ffee2d28f88
WRITE of size 4 at 0x60f0000003c0 thread T0
    #0 0x10cedde62 in main sat.c:98
    #1 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

0x60f0000003c0 is located 0 bytes to the right of 176-byte region [0x60f000000310,0x60f0000003c0)
allocated by thread T0 here:
    #0 0x10cf43400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x10cedd519 in main sat.c:83
    #2 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

SUMMARY: AddressSanitizer: heap-buffer-overflow sat.c:98 in main
Shadow bytes around the buggy address:
  0x1c1e00000020: fa fa fa fa fa fa 00 00 00 00 00 00 00 00 00 00
  0x1c1e00000030: 00 00 00 00 00 00 00 00 00 00 00 00 fa fa fa fa
  0x1c1e00000040: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 00
  0x1c1e00000050: 00 00 00 00 00 00 00 00 00 00 fa fa fa fa fa fa
  0x1c1e00000060: fa fa 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x1c1e00000070: 00 00 00 00 00 00 00 00[fa]fa fa fa fa fa fa fa
  0x1c1e00000080: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c1e00000090: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c1e000000a0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c1e000000b0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c1e000000c0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
=================================================================
==18202==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60b0000004cc at pc 0x00010cede910 bp 0x7ffee2d28f90 sp 0x7ffee2d28f88
WRITE of size 4 at 0x60b0000004cc thread T0
    #0 0x10cede90f in main sat.c:108
    #1 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

0x60b0000004cc is located 0 bytes to the right of 108-byte region [0x60b000000460,0x60b0000004cc)
allocated by thread T0 here:
    #0 0x10cf43400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x10cede1f6 in main sat.c:106
    #2 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

SUMMARY: AddressSanitizer: heap-buffer-overflow sat.c:108 in main
Shadow bytes around the buggy address:
  0x1c1600000040: 00 04 fa fa fa fa fa fa fa fa 00 00 00 00 00 00
  0x1c1600000050: 00 00 00 00 00 00 00 04 fa fa fa fa fa fa fa fa
  0x1c1600000060: 00 00 00 00 00 00 00 00 00 00 00 00 00 04 fa fa
  0x1c1600000070: fa fa fa fa fa fa 00 00 00 00 00 00 00 00 00 00
  0x1c1600000080: 00 00 00 04 fa fa fa fa fa fa fa fa 00 00 00 00
=>0x1c1600000090: 00 00 00 00 00 00 00 00 00[04]fa fa fa fa fa fa
  0x1c16000000a0: fa fa 00 00 00 00 00 00 00 00 00 00 00 00 00 04
  0x1c16000000b0: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00
  0x1c16000000c0: 00 00 00 00 00 04 fa fa fa fa fa fa fa fa 00 00
  0x1c16000000d0: 00 00 00 00 00 00 00 00 00 00 00 04 fa fa fa fa
  0x1c16000000e0: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
=================================================================
==18202==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60b0000004cc at pc 0x00010cedc615 bp 0x7ffee2d286d0 sp 0x7ffee2d286c8
READ of size 4 at 0x60b0000004cc thread T0
    #0 0x10cedc614 in abscmpfunc sat.c:39
    #1 0x10cf3ce79 in wrap_qsort+0x79 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x3de79)
    #2 0x10cedef3a in main sat.c:117
    #3 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

0x60b0000004cc is located 0 bytes to the right of 108-byte region [0x60b000000460,0x60b0000004cc)
allocated by thread T0 here:
    #0 0x10cf43400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x10cede1f6 in main sat.c:106
    #2 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

SUMMARY: AddressSanitizer: heap-buffer-overflow sat.c:39 in abscmpfunc
Shadow bytes around the buggy address:
  0x1c1600000040: 00 04 fa fa fa fa fa fa fa fa 00 00 00 00 00 00
  0x1c1600000050: 00 00 00 00 00 00 00 04 fa fa fa fa fa fa fa fa
  0x1c1600000060: 00 00 00 00 00 00 00 00 00 00 00 00 00 04 fa fa
  0x1c1600000070: fa fa fa fa fa fa 00 00 00 00 00 00 00 00 00 00
  0x1c1600000080: 00 00 00 04 fa fa fa fa fa fa fa fa 00 00 00 00
=>0x1c1600000090: 00 00 00 00 00 00 00 00 00[04]fa fa fa fa fa fa
  0x1c16000000a0: fa fa 00 00 00 00 00 00 00 00 00 00 00 00 00 04
  0x1c16000000b0: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00
  0x1c16000000c0: 00 00 00 00 00 04 fa fa fa fa fa fa fa fa 00 00
  0x1c16000000d0: 00 00 00 00 00 00 00 00 00 00 00 04 fa fa fa fa
  0x1c16000000e0: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
=================================================================
==18202==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60b0000004cc at pc 0x00010cedc57a bp 0x7ffee2d286d0 sp 0x7ffee2d286c8
READ of size 4 at 0x60b0000004cc thread T0
    #0 0x10cedc579 in abscmpfunc sat.c:39
    #1 0x10cf3ce79 in wrap_qsort+0x79 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x3de79)
    #2 0x10cedef3a in main sat.c:117
    #3 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

0x60b0000004cc is located 0 bytes to the right of 108-byte region [0x60b000000460,0x60b0000004cc)
allocated by thread T0 here:
    #0 0x10cf43400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x10cede1f6 in main sat.c:106
    #2 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

SUMMARY: AddressSanitizer: heap-buffer-overflow sat.c:39 in abscmpfunc
Shadow bytes around the buggy address:
  0x1c1600000040: 00 04 fa fa fa fa fa fa fa fa 00 00 00 00 00 00
  0x1c1600000050: 00 00 00 00 00 00 00 04 fa fa fa fa fa fa fa fa
  0x1c1600000060: 00 00 00 00 00 00 00 00 00 00 00 00 00 04 fa fa
  0x1c1600000070: fa fa fa fa fa fa 00 00 00 00 00 00 00 00 00 00
  0x1c1600000080: 00 00 00 04 fa fa fa fa fa fa fa fa 00 00 00 00
=>0x1c1600000090: 00 00 00 00 00 00 00 00 00[04]fa fa fa fa fa fa
  0x1c16000000a0: fa fa 00 00 00 00 00 00 00 00 00 00 00 00 00 04
  0x1c16000000b0: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00
  0x1c16000000c0: 00 00 00 00 00 04 fa fa fa fa fa fa fa fa 00 00
  0x1c16000000d0: 00 00 00 00 00 00 00 00 00 00 00 04 fa fa fa fa
  0x1c16000000e0: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
=================================================================
==18202==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60b0000004cc at pc 0x00010cf3d058 bp 0x7ffee2d28f90 sp 0x7ffee2d28738
WRITE of size 116 at 0x60b0000004cc thread T0
    #0 0x10cf3d057 in wrap_qsort+0x257 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x3e057)
    #1 0x10cedef3a in main sat.c:117
    #2 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

0x60b0000004cc is located 0 bytes to the right of 108-byte region [0x60b000000460,0x60b0000004cc)
allocated by thread T0 here:
    #0 0x10cf43400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x10cede1f6 in main sat.c:106
    #2 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

SUMMARY: AddressSanitizer: heap-buffer-overflow (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x3e057) in wrap_qsort+0x257
Shadow bytes around the buggy address:
  0x1c1600000040: 00 04 fa fa fa fa fa fa fa fa 00 00 00 00 00 00
  0x1c1600000050: 00 00 00 00 00 00 00 04 fa fa fa fa fa fa fa fa
  0x1c1600000060: 00 00 00 00 00 00 00 00 00 00 00 00 00 04 fa fa
  0x1c1600000070: fa fa fa fa fa fa 00 00 00 00 00 00 00 00 00 00
  0x1c1600000080: 00 00 00 04 fa fa fa fa fa fa fa fa 00 00 00 00
=>0x1c1600000090: 00 00 00 00 00 00 00 00 00[04]fa fa fa fa fa fa
  0x1c16000000a0: fa fa 00 00 00 00 00 00 00 00 00 00 00 00 00 04
  0x1c16000000b0: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00
  0x1c16000000c0: 00 00 00 00 00 04 fa fa fa fa fa fa fa fa 00 00
  0x1c16000000d0: 00 00 00 00 00 00 00 00 00 00 00 04 fa fa fa fa
  0x1c16000000e0: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
=================================================================
==18202==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60f0000003c0 at pc 0x00010cf41480 bp 0x7ffee2d285d0 sp 0x7ffee2d27d98
READ of size 312 at 0x60f0000003c0 thread T0
    #0 0x10cf4147f in __asan_memcpy+0x1af (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x4247f)
    #1 0x10cee6f59 in copy sat.c:292
    #2 0x10cee06c7 in DPLL sat.c:259
    #3 0x10cedf50a in main sat.c:125
    #4 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

0x60f0000003c0 is located 0 bytes to the right of 176-byte region [0x60f000000310,0x60f0000003c0)
allocated by thread T0 here:
    #0 0x10cf43400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x10cedd519 in main sat.c:83
    #2 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

SUMMARY: AddressSanitizer: heap-buffer-overflow (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x4247f) in __asan_memcpy+0x1af
Shadow bytes around the buggy address:
  0x1c1e00000020: fa fa fa fa fa fa 00 00 00 00 00 00 00 00 00 00
  0x1c1e00000030: 00 00 00 00 00 00 00 00 00 00 00 00 fa fa fa fa
  0x1c1e00000040: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 00
  0x1c1e00000050: 00 00 00 00 00 00 00 00 00 00 fa fa fa fa fa fa
  0x1c1e00000060: fa fa 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x1c1e00000070: 00 00 00 00 00 00 00 00[fa]fa fa fa fa fa fa fa
  0x1c1e00000080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1c1e00000090: 00 00 00 00 00 00 fa fa fa fa fa fa fa fa 00 00
  0x1c1e000000a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1c1e000000b0: 00 00 00 00 fa fa fa fa fa fa fa fa 00 00 00 00
  0x1c1e000000c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
sat.c:334:13: runtime error: load of misaligned address 0x60e00000024d for type 'int', which requires 4 byte alignment
0x60e00000024d: note: pointer points here
 00 00 00 16 00 00 00  18 00 00 00 19 00 00 00  e6 ff ff ff 1a 00 00 00  e4 ff ff ff 1c 00 00 00  e3
             ^ 
SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior sat.c:334:13 in 
sat.c:337:13: runtime error: load of misaligned address 0x60e00000024d for type 'int', which requires 4 byte alignment
0x60e00000024d: note: pointer points here
 00 00 00 16 00 00 00  18 00 00 00 19 00 00 00  e6 ff ff ff 1a 00 00 00  e4 ff ff ff 1c 00 00 00  e3
             ^ 
SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior sat.c:337:13 in 
=================================================================
==18202==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x604000001bd1 at pc 0x00010cee0f22 bp 0x7ffee2d27f90 sp 0x7ffee2d27f88
WRITE of size 1 at 0x604000001bd1 thread T0
    #0 0x10cee0f21 in assign sat.c:146
    #1 0x10cee0735 in DPLL sat.c:260
    #2 0x10cee0806 in DPLL sat.c:260
    #3 0x10cee0806 in DPLL sat.c:260
    #4 0x10cedf50a in main sat.c:125
    #5 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

Address 0x604000001bd1 is a wild pointer.
SUMMARY: AddressSanitizer: heap-buffer-overflow sat.c:146 in assign
Shadow bytes around the buggy address:
  0x1c0800000320: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c0800000330: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c0800000340: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c0800000350: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c0800000360: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
=>0x1c0800000370: fa fa fa fa fa fa fa fa fa fa[fa]fa fa fa fa fa
  0x1c0800000380: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c0800000390: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c08000003a0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c08000003b0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c08000003c0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
=================================================================
==18202==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x613000009108 at pc 0x00010cee10b0 bp 0x7ffee2d27f90 sp 0x7ffee2d27f88
READ of size 8 at 0x613000009108 thread T0
    #0 0x10cee10af in assign sat.c:148
    #1 0x10cee0735 in DPLL sat.c:260
    #2 0x10cee0806 in DPLL sat.c:260
    #3 0x10cee0806 in DPLL sat.c:260
    #4 0x10cedf50a in main sat.c:125
    #5 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

Address 0x613000009108 is a wild pointer.
SUMMARY: AddressSanitizer: heap-buffer-overflow sat.c:148 in assign
Shadow bytes around the buggy address:
  0x1c26000011d0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c26000011e0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c26000011f0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c2600001200: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c2600001210: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
=>0x1c2600001220: fa[fa]fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c2600001230: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c2600001240: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c2600001250: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c2600001260: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c2600001270: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
=================================================================
==18202==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60f000006244 at pc 0x00010cee125f bp 0x7ffee2d27f90 sp 0x7ffee2d27f88
READ of size 4 at 0x60f000006244 thread T0
    #0 0x10cee125e in assign sat.c:149
    #1 0x10cee0735 in DPLL sat.c:260
    #2 0x10cee0806 in DPLL sat.c:260
    #3 0x10cee0806 in DPLL sat.c:260
    #4 0x10cedf50a in main sat.c:125
    #5 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

Address 0x60f000006244 is a wild pointer.
SUMMARY: AddressSanitizer: heap-buffer-overflow sat.c:149 in assign
Shadow bytes around the buggy address:
  0x1c1e00000bf0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c1e00000c00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c1e00000c10: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c1e00000c20: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c1e00000c30: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
=>0x1c1e00000c40: fa fa fa fa fa fa fa fa[fa]fa fa fa fa fa fa fa
  0x1c1e00000c50: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c1e00000c60: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c1e00000c70: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c1e00000c80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c1e00000c90: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
AddressSanitizer:DEADLYSIGNAL
=================================================================
==18202==ERROR: AddressSanitizer: BUS on unknown address (pc 0x00010cee10be bp 0x7ffee2d16a40 sp 0x7ffee2d167a0 T0)
==18202==The signal is caused by a READ memory access.
==18202==Hint: this fault was caused by a dereference of a high value address (see register values below).  Disassemble the provided pc to learn which register was used.
    #0 0x10cee10be in assign sat.c:148
    #1 0x10cee0735 in DPLL sat.c:260
    #2 0x10cee0806 in DPLL sat.c:260
    #3 0x10cee0806 in DPLL sat.c:260
    #4 0x10cee0806 in DPLL sat.c:260
    #5 0x10cee0806 in DPLL sat.c:260
    #6 0x10cee0806 in DPLL sat.c:260
    #7 0x10cee0806 in DPLL sat.c:260
    #8 0x10cee0806 in DPLL sat.c:260
    #9 0x10cee0806 in DPLL sat.c:260
    #10 0x10cee0806 in DPLL sat.c:260
    #11 0x10cee0806 in DPLL sat.c:260
    #12 0x10cee0806 in DPLL sat.c:260
    #13 0x10cee0806 in DPLL sat.c:260
    #14 0x10cee0806 in DPLL sat.c:260
    #15 0x10cee0806 in DPLL sat.c:260
    #16 0x10cee0806 in DPLL sat.c:260
    #17 0x10cee0806 in DPLL sat.c:260
    #18 0x10cee0806 in DPLL sat.c:260
    #19 0x10cee0806 in DPLL sat.c:260
    #20 0x10cee0806 in DPLL sat.c:260
    #21 0x10cee0806 in DPLL sat.c:260
    #22 0x10cee0806 in DPLL sat.c:260
    #23 0x10cee0806 in DPLL sat.c:260
    #24 0x10cee0806 in DPLL sat.c:260
    #25 0x10cee0806 in DPLL sat.c:260
    #26 0x10cee0806 in DPLL sat.c:260
    #27 0x10cee0806 in DPLL sat.c:260
    #28 0x10cee0806 in DPLL sat.c:260
    #29 0x10cee0806 in DPLL sat.c:260
    #30 0x10cee0806 in DPLL sat.c:260
    #31 0x10cee0806 in DPLL sat.c:260
    #32 0x10cee0806 in DPLL sat.c:260
    #33 0x10cee0806 in DPLL sat.c:260
    #34 0x10cee0806 in DPLL sat.c:260
    #35 0x10cee0806 in DPLL sat.c:260
    #36 0x10cee0806 in DPLL sat.c:260
    #37 0x10cee0806 in DPLL sat.c:260
    #38 0x10cee0806 in DPLL sat.c:260
    #39 0x10cee0806 in DPLL sat.c:260
    #40 0x10cee0806 in DPLL sat.c:260
    #41 0x10cee0806 in DPLL sat.c:260
    #42 0x10cee0806 in DPLL sat.c:260
    #43 0x10cee0806 in DPLL sat.c:260
    #44 0x10cee0806 in DPLL sat.c:260
    #45 0x10cee0806 in DPLL sat.c:260
    #46 0x10cee0806 in DPLL sat.c:260
    #47 0x10cee0806 in DPLL sat.c:260
    #48 0x10cee0806 in DPLL sat.c:260
    #49 0x10cee0806 in DPLL sat.c:260
    #50 0x10cee0806 in DPLL sat.c:260
    #51 0x10cee0806 in DPLL sat.c:260
    #52 0x10cee0806 in DPLL sat.c:260
    #53 0x10cee0806 in DPLL sat.c:260
    #54 0x10cee0806 in DPLL sat.c:260
    #55 0x10cee0806 in DPLL sat.c:260
    #56 0x10cee0806 in DPLL sat.c:260
    #57 0x10cee0806 in DPLL sat.c:260
    #58 0x10cee0806 in DPLL sat.c:260
    #59 0x10cee0806 in DPLL sat.c:260
    #60 0x10cee0806 in DPLL sat.c:260
    #61 0x10cee0806 in DPLL sat.c:260
    #62 0x10cee0806 in DPLL sat.c:260
    #63 0x10cee0806 in DPLL sat.c:260
    #64 0x10cee0806 in DPLL sat.c:260
    #65 0x10cee0806 in DPLL sat.c:260
    #66 0x10cee0806 in DPLL sat.c:260
    #67 0x10cee0806 in DPLL sat.c:260
    #68 0x10cedf50a in main sat.c:125
    #69 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

==18202==Register values:
rax = 0x00007ffee2d167c0  rbx = 0x00007ffee2d16820  rcx = 0x0000613000010108  rdx = 0x00007ffee2d16701  
rdi = 0x0000000000008808  rsi = 0x0000000000000001  rbp = 0x00007ffee2d16a40  rsp = 0x00007ffee2d167a0  
 r8 = 0x0000000000000001   r9 = 0x0000000000000001  r10 = 0x0000000000000030  r11 = 0xffff80022a1d9cd0  
r12 = 0x0000000000000000  r13 = 0x0000000000000000  r14 = 0x0000000000000000  r15 = 0x0000000000000000  
AddressSanitizer can not provide additional info.
SUMMARY: AddressSanitizer: BUS sat.c:148 in assign
==18202==ABORTING
./runsat.sh: line 23: 18202 Abort trap: 6           "${SCRIPT_DIR}/sat" "$1"
