input file taken from /Users/salimalwahaibi/Desktop/imperial/sem 2/software relibelity/software-reliability-/inputs/solver3/generative_fuzzing/581.cnf the error found is:
=================================================================
==18828==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6080000002f8 at pc 0x000106e29e63 bp 0x7ffee8ddcf90 sp 0x7ffee8ddcf88
WRITE of size 4 at 0x6080000002f8 thread T0
    #0 0x106e29e62 in main sat.c:98
    #1 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

0x6080000002f8 is located 0 bytes to the right of 88-byte region [0x6080000002a0,0x6080000002f8)
allocated by thread T0 here:
    #0 0x106e8f400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x106e29519 in main sat.c:83
    #2 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

SUMMARY: AddressSanitizer: heap-buffer-overflow sat.c:98 in main
Shadow bytes around the buggy address:
  0x1c1000000000: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 00
  0x1c1000000010: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 05
  0x1c1000000020: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 00
  0x1c1000000030: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa
  0x1c1000000040: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa
=>0x1c1000000050: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00[fa]
  0x1c1000000060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c1000000070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c1000000080: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c1000000090: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c10000000a0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
=================================================================
==18828==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6080000002f8 at pc 0x000106e28615 bp 0x7ffee8ddc6d0 sp 0x7ffee8ddc6c8
READ of size 4 at 0x6080000002f8 thread T0
    #0 0x106e28614 in abscmpfunc sat.c:39
    #1 0x106e88e79 in wrap_qsort+0x79 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x3de79)
    #2 0x106e2b3b4 in main sat.c:122
    #3 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

0x6080000002f8 is located 0 bytes to the right of 88-byte region [0x6080000002a0,0x6080000002f8)
allocated by thread T0 here:
    #0 0x106e8f400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x106e29519 in main sat.c:83
    #2 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

SUMMARY: AddressSanitizer: heap-buffer-overflow sat.c:39 in abscmpfunc
Shadow bytes around the buggy address:
  0x1c1000000000: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 00
  0x1c1000000010: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 05
  0x1c1000000020: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 00
  0x1c1000000030: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa
  0x1c1000000040: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa
=>0x1c1000000050: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00[fa]
  0x1c1000000060: fa fa fa fa fd fd fd fd fd fd fd fd fd fd fd fd
  0x1c1000000070: fa fa fa fa fd fd fd fd fd fd fd fd fd fd fd fd
  0x1c1000000080: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa
  0x1c1000000090: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa
  0x1c10000000a0: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
=================================================================
==18828==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6080000002f8 at pc 0x000106e2857a bp 0x7ffee8ddc6d0 sp 0x7ffee8ddc6c8
READ of size 4 at 0x6080000002f8 thread T0
    #0 0x106e28579 in abscmpfunc sat.c:39
    #1 0x106e88e79 in wrap_qsort+0x79 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x3de79)
    #2 0x106e2b3b4 in main sat.c:122
    #3 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

0x6080000002f8 is located 0 bytes to the right of 88-byte region [0x6080000002a0,0x6080000002f8)
allocated by thread T0 here:
    #0 0x106e8f400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x106e29519 in main sat.c:83
    #2 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

SUMMARY: AddressSanitizer: heap-buffer-overflow sat.c:39 in abscmpfunc
Shadow bytes around the buggy address:
  0x1c1000000000: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 00
  0x1c1000000010: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 05
  0x1c1000000020: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 00
  0x1c1000000030: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa
  0x1c1000000040: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa
=>0x1c1000000050: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00[fa]
  0x1c1000000060: fa fa fa fa fd fd fd fd fd fd fd fd fd fd fd fd
  0x1c1000000070: fa fa fa fa fd fd fd fd fd fd fd fd fd fd fd fd
  0x1c1000000080: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa
  0x1c1000000090: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa
  0x1c10000000a0: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
=================================================================
==18828==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6080000002f8 at pc 0x000106e89058 bp 0x7ffee8ddcf90 sp 0x7ffee8ddc738
WRITE of size 128 at 0x6080000002f8 thread T0
    #0 0x106e89057 in wrap_qsort+0x257 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x3e057)
    #1 0x106e2b3b4 in main sat.c:122
    #2 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

0x6080000002f8 is located 0 bytes to the right of 88-byte region [0x6080000002a0,0x6080000002f8)
allocated by thread T0 here:
    #0 0x106e8f400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x106e29519 in main sat.c:83
    #2 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

SUMMARY: AddressSanitizer: heap-buffer-overflow (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x3e057) in wrap_qsort+0x257
Shadow bytes around the buggy address:
  0x1c1000000000: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 00
  0x1c1000000010: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 05
  0x1c1000000020: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 00
  0x1c1000000030: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa
  0x1c1000000040: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa
=>0x1c1000000050: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00[fa]
  0x1c1000000060: fa fa fa fa fd fd fd fd fd fd fd fd fd fd fd fd
  0x1c1000000070: fa fa fa fa fd fd fd fd fd fd fd fd fd fd fd fd
  0x1c1000000080: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa
  0x1c1000000090: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa
  0x1c10000000a0: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
sat.c:334:13: runtime error: load of misaligned address 0x6080000002e1 for type 'int', which requires 4 byte alignment
0x6080000002e1: note: pointer points here
 00 00 00  f5 ff ff ff 0b 00 00 00  f2 ff ff ff 0e 00 00 00  f1 ff ff ff 0f 00 00 00  f0 ff ff ff 10
              ^ 
SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior sat.c:334:13 in 
sat.c:337:13: runtime error: load of misaligned address 0x6080000002e1 for type 'int', which requires 4 byte alignment
0x6080000002e1: note: pointer points here
 00 00 00  f5 ff ff ff 0b 00 00 00  f2 ff ff ff 0e 00 00 00  f1 ff ff ff 0f 00 00 00  f0 ff ff ff 10
              ^ 
SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior sat.c:337:13 in 
=================================================================
==18828==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6080000005f8 at pc 0x000106e2e221 bp 0x7ffee8ddc5f0 sp 0x7ffee8ddc5e8
READ of size 4 at 0x6080000005f8 thread T0
    #0 0x106e2e220 in remove_lit sat.c:319
    #1 0x106e2da04 in assign sat.c:159
    #2 0x106e2c03b in DPLL sat.c:239
    #3 0x106e2b50a in main sat.c:125
    #4 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

0x6080000005f8 is located 0 bytes to the right of 88-byte region [0x6080000005a0,0x6080000005f8)
allocated by thread T0 here:
    #0 0x106e8f400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x106e29519 in main sat.c:83
    #2 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

SUMMARY: AddressSanitizer: heap-buffer-overflow sat.c:319 in remove_lit
Shadow bytes around the buggy address:
  0x1c1000000060: fa fa fa fa fd fd fd fd fd fd fd fd fd fd fd fd
  0x1c1000000070: fa fa fa fa fd fd fd fd fd fd fd fd fd fd fd fd
  0x1c1000000080: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa
  0x1c1000000090: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa
  0x1c10000000a0: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa
=>0x1c10000000b0: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00[fa]
  0x1c10000000c0: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa
  0x1c10000000d0: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa
  0x1c10000000e0: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa
  0x1c10000000f0: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa
  0x1c1000000100: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
=================================================================
==18828==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6080000005f8 at pc 0x000106e2e38c bp 0x7ffee8ddc5f0 sp 0x7ffee8ddc5e8
WRITE of size 4 at 0x6080000005f8 thread T0
    #0 0x106e2e38b in remove_lit sat.c:319
    #1 0x106e2da04 in assign sat.c:159
    #2 0x106e2c03b in DPLL sat.c:239
    #3 0x106e2b50a in main sat.c:125
    #4 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

0x6080000005f8 is located 0 bytes to the right of 88-byte region [0x6080000005a0,0x6080000005f8)
allocated by thread T0 here:
    #0 0x106e8f400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x106e29519 in main sat.c:83
    #2 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

SUMMARY: AddressSanitizer: heap-buffer-overflow sat.c:319 in remove_lit
Shadow bytes around the buggy address:
  0x1c1000000060: fa fa fa fa fd fd fd fd fd fd fd fd fd fd fd fd
  0x1c1000000070: fa fa fa fa fd fd fd fd fd fd fd fd fd fd fd fd
  0x1c1000000080: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa
  0x1c1000000090: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa
  0x1c10000000a0: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa
=>0x1c10000000b0: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00[fa]
  0x1c10000000c0: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa
  0x1c10000000d0: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa
  0x1c10000000e0: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa
  0x1c10000000f0: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa
  0x1c1000000100: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
=================================================================
==18828==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6080000004f8 at pc 0x000106e8d480 bp 0x7ffee8ddc5d0 sp 0x7ffee8ddbd98
READ of size 136 at 0x6080000004f8 thread T0
    #0 0x106e8d47f in __asan_memcpy+0x1af (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x4247f)
    #1 0x106e32f59 in copy sat.c:292
    #2 0x106e2c6c7 in DPLL sat.c:259
    #3 0x106e2b50a in main sat.c:125
    #4 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

0x6080000004f8 is located 0 bytes to the right of 88-byte region [0x6080000004a0,0x6080000004f8)
allocated by thread T0 here:
    #0 0x106e8f400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x106e29519 in main sat.c:83
    #2 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

SUMMARY: AddressSanitizer: heap-buffer-overflow (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x4247f) in __asan_memcpy+0x1af
Shadow bytes around the buggy address:
  0x1c1000000040: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa
  0x1c1000000050: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa
  0x1c1000000060: fa fa fa fa fd fd fd fd fd fd fd fd fd fd fd fd
  0x1c1000000070: fa fa fa fa fd fd fd fd fd fd fd fd fd fd fd fd
  0x1c1000000080: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa
=>0x1c1000000090: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00[fa]
  0x1c10000000a0: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa
  0x1c10000000b0: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa
  0x1c10000000c0: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa
  0x1c10000000d0: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa
  0x1c10000000e0: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
=================================================================
==18828==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60300000222f at pc 0x000106e2cf22 bp 0x7ffee8ddbf90 sp 0x7ffee8ddbf88
WRITE of size 1 at 0x60300000222f thread T0
    #0 0x106e2cf21 in assign sat.c:146
    #1 0x106e2c735 in DPLL sat.c:260
    #2 0x106e2c806 in DPLL sat.c:260
    #3 0x106e2c806 in DPLL sat.c:260
    #4 0x106e2b50a in main sat.c:125
    #5 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

0x60300000222f is located 1 bytes to the left of 22-byte region [0x603000002230,0x603000002246)
allocated by thread T0 here:
    #0 0x106e8f400 in wrap_malloc+0xa0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x44400)
    #1 0x106e31aff in copy sat.c:272
    #2 0x106e2c6c7 in DPLL sat.c:259
    #3 0x106e2c806 in DPLL sat.c:260
    #4 0x106e2c806 in DPLL sat.c:260
    #5 0x106e2b50a in main sat.c:125
    #6 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

SUMMARY: AddressSanitizer: heap-buffer-overflow sat.c:146 in assign
Shadow bytes around the buggy address:
  0x1c06000003f0: fa fa 00 00 00 00 fa fa 00 00 00 04 fa fa 00 00
  0x1c0600000400: 00 fa fa fa 00 00 00 04 fa fa 00 00 00 fa fa fa
  0x1c0600000410: 00 00 00 04 fa fa 00 00 04 fa fa fa 00 00 00 00
  0x1c0600000420: fa fa 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00
  0x1c0600000430: 00 04 fa fa 00 00 00 04 fa fa 00 00 00 04 fa fa
=>0x1c0600000440: 00 00 00 fa fa[fa]00 00 06 fa fa fa 00 00 00 04
  0x1c0600000450: fa fa 00 00 00 04 fa fa 00 00 00 fa fa fa 00 00
  0x1c0600000460: 00 00 fa fa 00 00 00 04 fa fa 00 00 00 fa fa fa
  0x1c0600000470: 00 00 00 04 fa fa 00 00 00 fa fa fa 00 00 00 04
  0x1c0600000480: fa fa 00 00 04 fa fa fa 00 00 00 00 fa fa 00 00
  0x1c0600000490: 00 00 fa fa 00 00 00 00 fa fa 00 00 00 04 fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
=================================================================
==18828==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60f000000308 at pc 0x000106e2d0b0 bp 0x7ffee8ddbf90 sp 0x7ffee8ddbf88
READ of size 8 at 0x60f000000308 thread T0
    #0 0x106e2d0af in assign sat.c:148
    #1 0x106e2c735 in DPLL sat.c:260
    #2 0x106e2c806 in DPLL sat.c:260
    #3 0x106e2c806 in DPLL sat.c:260
    #4 0x106e2b50a in main sat.c:125
    #5 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

0x60f000000308 is located 8 bytes to the left of 176-byte region [0x60f000000310,0x60f0000003c0)
allocated by thread T0 here:
    #0 0x106e8f7d5 in wrap_calloc+0xa5 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x447d5)
    #1 0x106e31c30 in copy sat.c:273
    #2 0x106e2c6c7 in DPLL sat.c:259
    #3 0x106e2c806 in DPLL sat.c:260
    #4 0x106e2c806 in DPLL sat.c:260
    #5 0x106e2b50a in main sat.c:125
    #6 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

SUMMARY: AddressSanitizer: heap-buffer-overflow sat.c:148 in assign
Shadow bytes around the buggy address:
  0x1c1e00000010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 fa fa
  0x1c1e00000020: fa fa fa fa fa fa 00 00 00 00 00 00 00 00 00 00
  0x1c1e00000030: 00 00 00 00 00 00 00 00 00 00 00 00 fa fa fa fa
  0x1c1e00000040: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 00
  0x1c1e00000050: 00 00 00 00 00 00 00 00 00 00 fa fa fa fa fa fa
=>0x1c1e00000060: fa[fa]00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1c1e00000070: 00 00 00 00 00 00 00 00 fa fa fa fa fa fa fa fa
  0x1c1e00000080: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c1e00000090: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c1e000000a0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c1e000000b0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
=================================================================
==18828==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x608000000a1c at pc 0x000106e2d25f bp 0x7ffee8ddbf90 sp 0x7ffee8ddbf88
READ of size 4 at 0x608000000a1c thread T0
    #0 0x106e2d25e in assign sat.c:149
    #1 0x106e2c735 in DPLL sat.c:260
    #2 0x106e2c806 in DPLL sat.c:260
    #3 0x106e2c806 in DPLL sat.c:260
    #4 0x106e2b50a in main sat.c:125
    #5 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

0x608000000a1c is located 4 bytes to the left of 88-byte region [0x608000000a20,0x608000000a78)
allocated by thread T0 here:
    #0 0x106e8f7d5 in wrap_calloc+0xa5 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x447d5)
    #1 0x106e31d61 in copy sat.c:274
    #2 0x106e2c6c7 in DPLL sat.c:259
    #3 0x106e2c806 in DPLL sat.c:260
    #4 0x106e2c806 in DPLL sat.c:260
    #5 0x106e2b50a in main sat.c:125
    #6 0x7fff20530f3c in start+0x0 (libdyld.dylib:x86_64+0x15f3c)

SUMMARY: AddressSanitizer: heap-buffer-overflow sat.c:149 in assign
Shadow bytes around the buggy address:
  0x1c10000000f0: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa
  0x1c1000000100: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa
  0x1c1000000110: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 00
  0x1c1000000120: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa
  0x1c1000000130: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 00
=>0x1c1000000140: fa fa fa[fa]00 00 00 00 00 00 00 00 00 00 00 fa
  0x1c1000000150: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c1000000160: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c1000000170: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c1000000180: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c1000000190: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
AddressSanitizer:DEADLYSIGNAL
=================================================================
==18828==ERROR: AddressSanitizer: stack-overflow on address 0x7ffee85ddfc8 (pc 0x000106e63c90 bp 0x7ffee85de810 sp 0x7ffee85ddfd0 T0)
    #0 0x106e63c90 in wrap_memcpy+0xc0 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x18c90)
    #1 0x106e314db in copy sat.c:265
    #2 0x106e2c6c7 in DPLL sat.c:259
    #3 0x106e2c806 in DPLL sat.c:260
    #4 0x106e2c806 in DPLL sat.c:260
    #5 0x106e2c806 in DPLL sat.c:260
    #6 0x106e2c806 in DPLL sat.c:260
    #7 0x106e2c806 in DPLL sat.c:260
    #8 0x106e2c806 in DPLL sat.c:260
    #9 0x106e2c806 in DPLL sat.c:260
    #10 0x106e2c806 in DPLL sat.c:260
    #11 0x106e2c806 in DPLL sat.c:260
    #12 0x106e2c806 in DPLL sat.c:260
    #13 0x106e2c806 in DPLL sat.c:260
    #14 0x106e2c806 in DPLL sat.c:260
    #15 0x106e2c806 in DPLL sat.c:260
    #16 0x106e2c806 in DPLL sat.c:260
    #17 0x106e2c806 in DPLL sat.c:260
    #18 0x106e2c806 in DPLL sat.c:260
    #19 0x106e2c806 in DPLL sat.c:260
    #20 0x106e2c806 in DPLL sat.c:260
    #21 0x106e2c806 in DPLL sat.c:260
    #22 0x106e2c806 in DPLL sat.c:260
    #23 0x106e2c806 in DPLL sat.c:260
    #24 0x106e2c806 in DPLL sat.c:260
    #25 0x106e2c806 in DPLL sat.c:260
    #26 0x106e2c806 in DPLL sat.c:260
    #27 0x106e2c806 in DPLL sat.c:260
    #28 0x106e2c806 in DPLL sat.c:260
    #29 0x106e2c806 in DPLL sat.c:260
    #30 0x106e2c806 in DPLL sat.c:260
    #31 0x106e2c806 in DPLL sat.c:260
    #32 0x106e2c806 in DPLL sat.c:260
    #33 0x106e2c806 in DPLL sat.c:260
    #34 0x106e2c806 in DPLL sat.c:260
    #35 0x106e2c806 in DPLL sat.c:260
    #36 0x106e2c806 in DPLL sat.c:260
    #37 0x106e2c806 in DPLL sat.c:260
    #38 0x106e2c806 in DPLL sat.c:260
    #39 0x106e2c806 in DPLL sat.c:260
    #40 0x106e2c806 in DPLL sat.c:260
    #41 0x106e2c806 in DPLL sat.c:260
    #42 0x106e2c806 in DPLL sat.c:260
    #43 0x106e2c806 in DPLL sat.c:260
    #44 0x106e2c806 in DPLL sat.c:260
    #45 0x106e2c806 in DPLL sat.c:260
    #46 0x106e2c806 in DPLL sat.c:260
    #47 0x106e2c806 in DPLL sat.c:260
    #48 0x106e2c806 in DPLL sat.c:260
    #49 0x106e2c806 in DPLL sat.c:260
    #50 0x106e2c806 in DPLL sat.c:260
    #51 0x106e2c806 in DPLL sat.c:260
    #52 0x106e2c806 in DPLL sat.c:260
    #53 0x106e2c806 in DPLL sat.c:260
    #54 0x106e2c806 in DPLL sat.c:260
    #55 0x106e2c806 in DPLL sat.c:260
    #56 0x106e2c806 in DPLL sat.c:260
    #57 0x106e2c806 in DPLL sat.c:260
    #58 0x106e2c806 in DPLL sat.c:260
    #59 0x106e2c806 in DPLL sat.c:260
    #60 0x106e2c806 in DPLL sat.c:260
    #61 0x106e2c806 in DPLL sat.c:260
    #62 0x106e2c806 in DPLL sat.c:260
    #63 0x106e2c806 in DPLL sat.c:260
    #64 0x106e2c806 in DPLL sat.c:260
    #65 0x106e2c806 in DPLL sat.c:260
    #66 0x106e2c806 in DPLL sat.c:260
    #67 0x106e2c806 in DPLL sat.c:260
    #68 0x106e2c806 in DPLL sat.c:260
    #69 0x106e2c806 in DPLL sat.c:260
    #70 0x106e2c806 in DPLL sat.c:260
    #71 0x106e2c806 in DPLL sat.c:260
    #72 0x106e2c806 in DPLL sat.c:260
    #73 0x106e2c806 in DPLL sat.c:260
    #74 0x106e2c806 in DPLL sat.c:260
    #75 0x106e2c806 in DPLL sat.c:260
    #76 0x106e2c806 in DPLL sat.c:260
    #77 0x106e2c806 in DPLL sat.c:260
    #78 0x106e2c806 in DPLL sat.c:260
    #79 0x106e2c806 in DPLL sat.c:260
    #80 0x106e2c806 in DPLL sat.c:260
    #81 0x106e2c806 in DPLL sat.c:260
    #82 0x106e2c806 in DPLL sat.c:260
    #83 0x106e2c806 in DPLL sat.c:260
    #84 0x106e2c806 in DPLL sat.c:260
    #85 0x106e2c806 in DPLL sat.c:260
    #86 0x106e2c806 in DPLL sat.c:260
    #87 0x106e2c806 in DPLL sat.c:260
    #88 0x106e2c806 in DPLL sat.c:260
    #89 0x106e2c806 in DPLL sat.c:260
    #90 0x106e2c806 in DPLL sat.c:260
    #91 0x106e2c806 in DPLL sat.c:260
    #92 0x106e2c806 in DPLL sat.c:260
    #93 0x106e2c806 in DPLL sat.c:260
    #94 0x106e2c806 in DPLL sat.c:260
    #95 0x106e2c806 in DPLL sat.c:260
    #96 0x106e2c806 in DPLL sat.c:260
    #97 0x106e2c806 in DPLL sat.c:260
    #98 0x106e2c806 in DPLL sat.c:260
    #99 0x106e2c806 in DPLL sat.c:260
    #100 0x106e2c806 in DPLL sat.c:260
    #101 0x106e2c806 in DPLL sat.c:260
    #102 0x106e2c806 in DPLL sat.c:260
    #103 0x106e2c806 in DPLL sat.c:260
    #104 0x106e2c806 in DPLL sat.c:260
    #105 0x106e2c806 in DPLL sat.c:260
    #106 0x106e2c806 in DPLL sat.c:260
    #107 0x106e2c806 in DPLL sat.c:260
    #108 0x106e2c806 in DPLL sat.c:260
    #109 0x106e2c806 in DPLL sat.c:260
    #110 0x106e2c806 in DPLL sat.c:260
    #111 0x106e2c806 in DPLL sat.c:260
    #112 0x106e2c806 in DPLL sat.c:260
    #113 0x106e2c806 in DPLL sat.c:260
    #114 0x106e2c806 in DPLL sat.c:260
    #115 0x106e2c806 in DPLL sat.c:260
    #116 0x106e2c806 in DPLL sat.c:260
    #117 0x106e2c806 in DPLL sat.c:260
    #118 0x106e2c806 in DPLL sat.c:260
    #119 0x106e2c806 in DPLL sat.c:260
    #120 0x106e2c806 in DPLL sat.c:260
    #121 0x106e2c806 in DPLL sat.c:260
    #122 0x106e2c806 in DPLL sat.c:260
    #123 0x106e2c806 in DPLL sat.c:260
    #124 0x106e2c806 in DPLL sat.c:260
    #125 0x106e2c806 in DPLL sat.c:260
    #126 0x106e2c806 in DPLL sat.c:260
    #127 0x106e2c806 in DPLL sat.c:260
    #128 0x106e2c806 in DPLL sat.c:260
    #129 0x106e2c806 in DPLL sat.c:260
    #130 0x106e2c806 in DPLL sat.c:260
    #131 0x106e2c806 in DPLL sat.c:260
    #132 0x106e2c806 in DPLL sat.c:260
    #133 0x106e2c806 in DPLL sat.c:260
    #134 0x106e2c806 in DPLL sat.c:260
    #135 0x106e2c806 in DPLL sat.c:260
    #136 0x106e2c806 in DPLL sat.c:260
    #137 0x106e2c806 in DPLL sat.c:260
    #138 0x106e2c806 in DPLL sat.c:260
    #139 0x106e2c806 in DPLL sat.c:260
    #140 0x106e2c806 in DPLL sat.c:260
    #141 0x106e2c806 in DPLL sat.c:260
    #142 0x106e2c806 in DPLL sat.c:260
    #143 0x106e2c806 in DPLL sat.c:260
    #144 0x106e2c806 in DPLL sat.c:260
    #145 0x106e2c806 in DPLL sat.c:260
    #146 0x106e2c806 in DPLL sat.c:260
    #147 0x106e2c806 in DPLL sat.c:260
    #148 0x106e2c806 in DPLL sat.c:260
    #149 0x106e2c806 in DPLL sat.c:260
    #150 0x106e2c806 in DPLL sat.c:260
    #151 0x106e2c806 in DPLL sat.c:260
    #152 0x106e2c806 in DPLL sat.c:260
    #153 0x106e2c806 in DPLL sat.c:260
    #154 0x106e2c806 in DPLL sat.c:260
    #155 0x106e2c806 in DPLL sat.c:260
    #156 0x106e2c806 in DPLL sat.c:260
    #157 0x106e2c806 in DPLL sat.c:260
    #158 0x106e2c806 in DPLL sat.c:260
    #159 0x106e2c806 in DPLL sat.c:260
    #160 0x106e2c806 in DPLL sat.c:260
    #161 0x106e2c806 in DPLL sat.c:260
    #162 0x106e2c806 in DPLL sat.c:260
    #163 0x106e2c806 in DPLL sat.c:260
    #164 0x106e2c806 in DPLL sat.c:260
    #165 0x106e2c806 in DPLL sat.c:260
    #166 0x106e2c806 in DPLL sat.c:260
    #167 0x106e2c806 in DPLL sat.c:260
    #168 0x106e2c806 in DPLL sat.c:260
    #169 0x106e2c806 in DPLL sat.c:260
    #170 0x106e2c806 in DPLL sat.c:260
    #171 0x106e2c806 in DPLL sat.c:260
    #172 0x106e2c806 in DPLL sat.c:260
    #173 0x106e2c806 in DPLL sat.c:260
    #174 0x106e2c806 in DPLL sat.c:260
    #175 0x106e2c806 in DPLL sat.c:260
    #176 0x106e2c806 in DPLL sat.c:260
    #177 0x106e2c806 in DPLL sat.c:260
    #178 0x106e2c806 in DPLL sat.c:260
    #179 0x106e2c806 in DPLL sat.c:260
    #180 0x106e2c806 in DPLL sat.c:260
    #181 0x106e2c806 in DPLL sat.c:260
    #182 0x106e2c806 in DPLL sat.c:260
    #183 0x106e2c806 in DPLL sat.c:260
    #184 0x106e2c806 in DPLL sat.c:260
    #185 0x106e2c806 in DPLL sat.c:260
    #186 0x106e2c806 in DPLL sat.c:260
    #187 0x106e2c806 in DPLL sat.c:260
    #188 0x106e2c806 in DPLL sat.c:260
    #189 0x106e2c806 in DPLL sat.c:260
    #190 0x106e2c806 in DPLL sat.c:260
    #191 0x106e2c806 in DPLL sat.c:260
    #192 0x106e2c806 in DPLL sat.c:260
    #193 0x106e2c806 in DPLL sat.c:260
    #194 0x106e2c806 in DPLL sat.c:260
    #195 0x106e2c806 in DPLL sat.c:260
    #196 0x106e2c806 in DPLL sat.c:260
    #197 0x106e2c806 in DPLL sat.c:260
    #198 0x106e2c806 in DPLL sat.c:260
    #199 0x106e2c806 in DPLL sat.c:260
    #200 0x106e2c806 in DPLL sat.c:260
    #201 0x106e2c806 in DPLL sat.c:260
    #202 0x106e2c806 in DPLL sat.c:260
    #203 0x106e2c806 in DPLL sat.c:260
    #204 0x106e2c806 in DPLL sat.c:260
    #205 0x106e2c806 in DPLL sat.c:260
    #206 0x106e2c806 in DPLL sat.c:260
    #207 0x106e2c806 in DPLL sat.c:260
    #208 0x106e2c806 in DPLL sat.c:260
    #209 0x106e2c806 in DPLL sat.c:260
    #210 0x106e2c806 in DPLL sat.c:260
    #211 0x106e2c806 in DPLL sat.c:260
    #212 0x106e2c806 in DPLL sat.c:260
    #213 0x106e2c806 in DPLL sat.c:260
    #214 0x106e2c806 in DPLL sat.c:260
    #215 0x106e2c806 in DPLL sat.c:260
    #216 0x106e2c806 in DPLL sat.c:260
    #217 0x106e2c806 in DPLL sat.c:260
    #218 0x106e2c806 in DPLL sat.c:260
    #219 0x106e2c806 in DPLL sat.c:260
    #220 0x106e2c806 in DPLL sat.c:260
    #221 0x106e2c806 in DPLL sat.c:260
    #222 0x106e2c806 in DPLL sat.c:260
    #223 0x106e2c806 in DPLL sat.c:260
    #224 0x106e2c806 in DPLL sat.c:260
    #225 0x106e2c806 in DPLL sat.c:260
    #226 0x106e2c806 in DPLL sat.c:260
    #227 0x106e2c806 in DPLL sat.c:260
    #228 0x106e2c806 in DPLL sat.c:260
    #229 0x106e2c806 in DPLL sat.c:260
    #230 0x106e2c806 in DPLL sat.c:260
    #231 0x106e2c806 in DPLL sat.c:260
    #232 0x106e2c806 in DPLL sat.c:260
    #233 0x106e2c806 in DPLL sat.c:260
    #234 0x106e2c806 in DPLL sat.c:260
    #235 0x106e2c806 in DPLL sat.c:260
    #236 0x106e2c806 in DPLL sat.c:260
    #237 0x106e2c806 in DPLL sat.c:260
    #238 0x106e2c806 in DPLL sat.c:260
    #239 0x106e2c806 in DPLL sat.c:260
    #240 0x106e2c806 in DPLL sat.c:260
    #241 0x106e2c806 in DPLL sat.c:260
    #242 0x106e2c806 in DPLL sat.c:260
    #243 0x106e2c806 in DPLL sat.c:260
    #244 0x106e2c806 in DPLL sat.c:260
    #245 0x106e2c806 in DPLL sat.c:260
    #246 0x106e2c806 in DPLL sat.c:260
    #247 0x106e2c806 in DPLL sat.c:260
    #248 0x106e2c806 in DPLL sat.c:260
    #249 0x106e2c806 in DPLL sat.c:260
    #250 0x106e2c806 in DPLL sat.c:260
    #251 0x106e2c806 in DPLL sat.c:260
    #252 0x106e2c806 in DPLL sat.c:260
    #253 0x106e2c806 in DPLL sat.c:260
    #254 0x106e2c806 in DPLL sat.c:260
    #255 0x106e2c806 in DPLL sat.c:260

SUMMARY: AddressSanitizer: stack-overflow (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x18c90) in wrap_memcpy+0xc0
==18828==ABORTING
./runsat.sh: line 23: 18828 Abort trap: 6           "${SCRIPT_DIR}/sat" "$1"
